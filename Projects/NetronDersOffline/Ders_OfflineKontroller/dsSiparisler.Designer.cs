//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Ders_OfflineKontroller {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsSiparisler")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsSiparisler : global::System.Data.DataSet {
        
        private SiparisBaslikDataTable tableSiparisBaslik;
        
        private SiparisSatirlariDataTable tableSiparisSatirlari;
        
        private global::System.Data.DataRelation relationSiparisBaslik_SiparisSatirlari;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsSiparisler() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsSiparisler(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SiparisBaslik"] != null)) {
                    base.Tables.Add(new SiparisBaslikDataTable(ds.Tables["SiparisBaslik"]));
                }
                if ((ds.Tables["SiparisSatirlari"] != null)) {
                    base.Tables.Add(new SiparisSatirlariDataTable(ds.Tables["SiparisSatirlari"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SiparisBaslikDataTable SiparisBaslik {
            get {
                return this.tableSiparisBaslik;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SiparisSatirlariDataTable SiparisSatirlari {
            get {
                return this.tableSiparisSatirlari;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsSiparisler cln = ((dsSiparisler)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SiparisBaslik"] != null)) {
                    base.Tables.Add(new SiparisBaslikDataTable(ds.Tables["SiparisBaslik"]));
                }
                if ((ds.Tables["SiparisSatirlari"] != null)) {
                    base.Tables.Add(new SiparisSatirlariDataTable(ds.Tables["SiparisSatirlari"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableSiparisBaslik = ((SiparisBaslikDataTable)(base.Tables["SiparisBaslik"]));
            if ((initTable == true)) {
                if ((this.tableSiparisBaslik != null)) {
                    this.tableSiparisBaslik.InitVars();
                }
            }
            this.tableSiparisSatirlari = ((SiparisSatirlariDataTable)(base.Tables["SiparisSatirlari"]));
            if ((initTable == true)) {
                if ((this.tableSiparisSatirlari != null)) {
                    this.tableSiparisSatirlari.InitVars();
                }
            }
            this.relationSiparisBaslik_SiparisSatirlari = this.Relations["SiparisBaslik_SiparisSatirlari"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsSiparisler";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsSiparisler.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSiparisBaslik = new SiparisBaslikDataTable();
            base.Tables.Add(this.tableSiparisBaslik);
            this.tableSiparisSatirlari = new SiparisSatirlariDataTable();
            base.Tables.Add(this.tableSiparisSatirlari);
            this.relationSiparisBaslik_SiparisSatirlari = new global::System.Data.DataRelation("SiparisBaslik_SiparisSatirlari", new global::System.Data.DataColumn[] {
                        this.tableSiparisBaslik.SIPARISIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableSiparisSatirlari.SIPARISIDColumn}, false);
            this.Relations.Add(this.relationSiparisBaslik_SiparisSatirlari);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSiparisBaslik() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSiparisSatirlari() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsSiparisler ds = new dsSiparisler();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void SiparisBaslikRowChangeEventHandler(object sender, SiparisBaslikRowChangeEvent e);
        
        public delegate void SiparisSatirlariRowChangeEventHandler(object sender, SiparisSatirlariRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SiparisBaslikDataTable : global::System.Data.TypedTableBase<SiparisBaslikRow> {
            
            private global::System.Data.DataColumn columnSIPARISID;
            
            private global::System.Data.DataColumn columnMUSTERI;
            
            private global::System.Data.DataColumn columnTUTAR;
            
            private global::System.Data.DataColumn columnTARIH;
            
            private global::System.Data.DataColumn columnMUSTERIRESMI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SiparisBaslikDataTable() {
                this.TableName = "SiparisBaslik";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SiparisBaslikDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SiparisBaslikDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIPARISIDColumn {
                get {
                    return this.columnSIPARISID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MUSTERIColumn {
                get {
                    return this.columnMUSTERI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TUTARColumn {
                get {
                    return this.columnTUTAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TARIHColumn {
                get {
                    return this.columnTARIH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MUSTERIRESMIColumn {
                get {
                    return this.columnMUSTERIRESMI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SiparisBaslikRow this[int index] {
                get {
                    return ((SiparisBaslikRow)(this.Rows[index]));
                }
            }
            
            public event SiparisBaslikRowChangeEventHandler SiparisBaslikRowChanging;
            
            public event SiparisBaslikRowChangeEventHandler SiparisBaslikRowChanged;
            
            public event SiparisBaslikRowChangeEventHandler SiparisBaslikRowDeleting;
            
            public event SiparisBaslikRowChangeEventHandler SiparisBaslikRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSiparisBaslikRow(SiparisBaslikRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SiparisBaslikRow AddSiparisBaslikRow(string MUSTERI, string TUTAR, System.DateTime TARIH, string MUSTERIRESMI) {
                SiparisBaslikRow rowSiparisBaslikRow = ((SiparisBaslikRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MUSTERI,
                        TUTAR,
                        TARIH,
                        MUSTERIRESMI};
                rowSiparisBaslikRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSiparisBaslikRow);
                return rowSiparisBaslikRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SiparisBaslikDataTable cln = ((SiparisBaslikDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SiparisBaslikDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSIPARISID = base.Columns["SIPARISID"];
                this.columnMUSTERI = base.Columns["MUSTERI"];
                this.columnTUTAR = base.Columns["TUTAR"];
                this.columnTARIH = base.Columns["TARIH"];
                this.columnMUSTERIRESMI = base.Columns["MUSTERIRESMI"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSIPARISID = new global::System.Data.DataColumn("SIPARISID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIPARISID);
                this.columnMUSTERI = new global::System.Data.DataColumn("MUSTERI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMUSTERI);
                this.columnTUTAR = new global::System.Data.DataColumn("TUTAR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTUTAR);
                this.columnTARIH = new global::System.Data.DataColumn("TARIH", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTARIH);
                this.columnMUSTERIRESMI = new global::System.Data.DataColumn("MUSTERIRESMI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMUSTERIRESMI);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("SiparisBaslikKey1", new global::System.Data.DataColumn[] {
                                this.columnSIPARISID}, false));
                this.columnSIPARISID.AutoIncrement = true;
                this.columnSIPARISID.AutoIncrementSeed = 1;
                this.columnSIPARISID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SiparisBaslikRow NewSiparisBaslikRow() {
                return ((SiparisBaslikRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SiparisBaslikRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SiparisBaslikRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SiparisBaslikRowChanged != null)) {
                    this.SiparisBaslikRowChanged(this, new SiparisBaslikRowChangeEvent(((SiparisBaslikRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SiparisBaslikRowChanging != null)) {
                    this.SiparisBaslikRowChanging(this, new SiparisBaslikRowChangeEvent(((SiparisBaslikRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SiparisBaslikRowDeleted != null)) {
                    this.SiparisBaslikRowDeleted(this, new SiparisBaslikRowChangeEvent(((SiparisBaslikRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SiparisBaslikRowDeleting != null)) {
                    this.SiparisBaslikRowDeleting(this, new SiparisBaslikRowChangeEvent(((SiparisBaslikRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSiparisBaslikRow(SiparisBaslikRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSiparisler ds = new dsSiparisler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SiparisBaslikDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SiparisSatirlariDataTable : global::System.Data.TypedTableBase<SiparisSatirlariRow> {
            
            private global::System.Data.DataColumn columnSATIRID;
            
            private global::System.Data.DataColumn columnSIPARISID;
            
            private global::System.Data.DataColumn columnURUNADI;
            
            private global::System.Data.DataColumn columnADET;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SiparisSatirlariDataTable() {
                this.TableName = "SiparisSatirlari";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SiparisSatirlariDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SiparisSatirlariDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SATIRIDColumn {
                get {
                    return this.columnSATIRID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIPARISIDColumn {
                get {
                    return this.columnSIPARISID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn URUNADIColumn {
                get {
                    return this.columnURUNADI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADETColumn {
                get {
                    return this.columnADET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SiparisSatirlariRow this[int index] {
                get {
                    return ((SiparisSatirlariRow)(this.Rows[index]));
                }
            }
            
            public event SiparisSatirlariRowChangeEventHandler SiparisSatirlariRowChanging;
            
            public event SiparisSatirlariRowChangeEventHandler SiparisSatirlariRowChanged;
            
            public event SiparisSatirlariRowChangeEventHandler SiparisSatirlariRowDeleting;
            
            public event SiparisSatirlariRowChangeEventHandler SiparisSatirlariRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSiparisSatirlariRow(SiparisSatirlariRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SiparisSatirlariRow AddSiparisSatirlariRow(int SATIRID, SiparisBaslikRow parentSiparisBaslikRowBySiparisBaslik_SiparisSatirlari, string URUNADI, string ADET) {
                SiparisSatirlariRow rowSiparisSatirlariRow = ((SiparisSatirlariRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SATIRID,
                        null,
                        URUNADI,
                        ADET};
                if ((parentSiparisBaslikRowBySiparisBaslik_SiparisSatirlari != null)) {
                    columnValuesArray[1] = parentSiparisBaslikRowBySiparisBaslik_SiparisSatirlari[0];
                }
                rowSiparisSatirlariRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSiparisSatirlariRow);
                return rowSiparisSatirlariRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SiparisSatirlariDataTable cln = ((SiparisSatirlariDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SiparisSatirlariDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSATIRID = base.Columns["SATIRID"];
                this.columnSIPARISID = base.Columns["SIPARISID"];
                this.columnURUNADI = base.Columns["URUNADI"];
                this.columnADET = base.Columns["ADET"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSATIRID = new global::System.Data.DataColumn("SATIRID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSATIRID);
                this.columnSIPARISID = new global::System.Data.DataColumn("SIPARISID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIPARISID);
                this.columnURUNADI = new global::System.Data.DataColumn("URUNADI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnURUNADI);
                this.columnADET = new global::System.Data.DataColumn("ADET", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADET);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("SiparisSatirlariKey1", new global::System.Data.DataColumn[] {
                                this.columnSATIRID}, false));
                this.columnSATIRID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SiparisSatirlariRow NewSiparisSatirlariRow() {
                return ((SiparisSatirlariRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SiparisSatirlariRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SiparisSatirlariRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SiparisSatirlariRowChanged != null)) {
                    this.SiparisSatirlariRowChanged(this, new SiparisSatirlariRowChangeEvent(((SiparisSatirlariRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SiparisSatirlariRowChanging != null)) {
                    this.SiparisSatirlariRowChanging(this, new SiparisSatirlariRowChangeEvent(((SiparisSatirlariRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SiparisSatirlariRowDeleted != null)) {
                    this.SiparisSatirlariRowDeleted(this, new SiparisSatirlariRowChangeEvent(((SiparisSatirlariRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SiparisSatirlariRowDeleting != null)) {
                    this.SiparisSatirlariRowDeleting(this, new SiparisSatirlariRowChangeEvent(((SiparisSatirlariRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSiparisSatirlariRow(SiparisSatirlariRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSiparisler ds = new dsSiparisler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SiparisSatirlariDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SiparisBaslikRow : global::System.Data.DataRow {
            
            private SiparisBaslikDataTable tableSiparisBaslik;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SiparisBaslikRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSiparisBaslik = ((SiparisBaslikDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SIPARISID {
                get {
                    try {
                        return ((int)(this[this.tableSiparisBaslik.SIPARISIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SIPARISID\' in table \'SiparisBaslik\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSiparisBaslik.SIPARISIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MUSTERI {
                get {
                    try {
                        return ((string)(this[this.tableSiparisBaslik.MUSTERIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MUSTERI\' in table \'SiparisBaslik\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSiparisBaslik.MUSTERIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TUTAR {
                get {
                    try {
                        return ((string)(this[this.tableSiparisBaslik.TUTARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TUTAR\' in table \'SiparisBaslik\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSiparisBaslik.TUTARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TARIH {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSiparisBaslik.TARIHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TARIH\' in table \'SiparisBaslik\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSiparisBaslik.TARIHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MUSTERIRESMI {
                get {
                    try {
                        return ((string)(this[this.tableSiparisBaslik.MUSTERIRESMIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MUSTERIRESMI\' in table \'SiparisBaslik\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSiparisBaslik.MUSTERIRESMIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIPARISIDNull() {
                return this.IsNull(this.tableSiparisBaslik.SIPARISIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIPARISIDNull() {
                this[this.tableSiparisBaslik.SIPARISIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMUSTERINull() {
                return this.IsNull(this.tableSiparisBaslik.MUSTERIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMUSTERINull() {
                this[this.tableSiparisBaslik.MUSTERIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTUTARNull() {
                return this.IsNull(this.tableSiparisBaslik.TUTARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTUTARNull() {
                this[this.tableSiparisBaslik.TUTARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTARIHNull() {
                return this.IsNull(this.tableSiparisBaslik.TARIHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTARIHNull() {
                this[this.tableSiparisBaslik.TARIHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMUSTERIRESMINull() {
                return this.IsNull(this.tableSiparisBaslik.MUSTERIRESMIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMUSTERIRESMINull() {
                this[this.tableSiparisBaslik.MUSTERIRESMIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SiparisSatirlariRow[] GetSiparisSatirlariRows() {
                if ((this.Table.ChildRelations["SiparisBaslik_SiparisSatirlari"] == null)) {
                    return new SiparisSatirlariRow[0];
                }
                else {
                    return ((SiparisSatirlariRow[])(base.GetChildRows(this.Table.ChildRelations["SiparisBaslik_SiparisSatirlari"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SiparisSatirlariRow : global::System.Data.DataRow {
            
            private SiparisSatirlariDataTable tableSiparisSatirlari;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SiparisSatirlariRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSiparisSatirlari = ((SiparisSatirlariDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SATIRID {
                get {
                    try {
                        return ((int)(this[this.tableSiparisSatirlari.SATIRIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SATIRID\' in table \'SiparisSatirlari\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSiparisSatirlari.SATIRIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SIPARISID {
                get {
                    try {
                        return ((int)(this[this.tableSiparisSatirlari.SIPARISIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SIPARISID\' in table \'SiparisSatirlari\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSiparisSatirlari.SIPARISIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string URUNADI {
                get {
                    try {
                        return ((string)(this[this.tableSiparisSatirlari.URUNADIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'URUNADI\' in table \'SiparisSatirlari\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSiparisSatirlari.URUNADIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADET {
                get {
                    try {
                        return ((string)(this[this.tableSiparisSatirlari.ADETColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADET\' in table \'SiparisSatirlari\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSiparisSatirlari.ADETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SiparisBaslikRow SiparisBaslikRow {
                get {
                    return ((SiparisBaslikRow)(this.GetParentRow(this.Table.ParentRelations["SiparisBaslik_SiparisSatirlari"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SiparisBaslik_SiparisSatirlari"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSATIRIDNull() {
                return this.IsNull(this.tableSiparisSatirlari.SATIRIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSATIRIDNull() {
                this[this.tableSiparisSatirlari.SATIRIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIPARISIDNull() {
                return this.IsNull(this.tableSiparisSatirlari.SIPARISIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIPARISIDNull() {
                this[this.tableSiparisSatirlari.SIPARISIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsURUNADINull() {
                return this.IsNull(this.tableSiparisSatirlari.URUNADIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetURUNADINull() {
                this[this.tableSiparisSatirlari.URUNADIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADETNull() {
                return this.IsNull(this.tableSiparisSatirlari.ADETColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADETNull() {
                this[this.tableSiparisSatirlari.ADETColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SiparisBaslikRowChangeEvent : global::System.EventArgs {
            
            private SiparisBaslikRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SiparisBaslikRowChangeEvent(SiparisBaslikRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SiparisBaslikRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SiparisSatirlariRowChangeEvent : global::System.EventArgs {
            
            private SiparisSatirlariRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SiparisSatirlariRowChangeEvent(SiparisSatirlariRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SiparisSatirlariRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591