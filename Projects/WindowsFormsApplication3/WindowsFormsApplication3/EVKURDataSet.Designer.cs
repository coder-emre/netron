//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace WindowsFormsApplication3 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("EVKURDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class EVKURDataSet : global::System.Data.DataSet {
        
        private TBL_CARILERDataTable tableTBL_CARILER;
        
        private TBL_KULLANICILARDataTable tableTBL_KULLANICILAR;
        
        private TBL_ODEMESEKILLERIDataTable tableTBL_ODEMESEKILLERI;
        
        private TBL_SIPARISBASLIKDataTable tableTBL_SIPARISBASLIK;
        
        private TBL_SIPARISSATIRLARIDataTable tableTBL_SIPARISSATIRLARI;
        
        private TBL_STOKKARTLARIDataTable tableTBL_STOKKARTLARI;
        
        private View_1DataTable tableView_1;
        
        private global::System.Data.DataRelation relationFK_TBL_SIPARISBASLIK_TBL_CARILER;
        
        private global::System.Data.DataRelation relationFK_TBL_SIPARISBASLIK_TBL_ODEMESEKILLERI;
        
        private global::System.Data.DataRelation relationFK_TBL_SIPARISSATIRLARI_TBL_SIPARISBASLIK;
        
        private global::System.Data.DataRelation relationFK_TBL_SIPARISSATIRLARI_TBL_STOKKARTLARI;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EVKURDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected EVKURDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TBL_CARILER"] != null)) {
                    base.Tables.Add(new TBL_CARILERDataTable(ds.Tables["TBL_CARILER"]));
                }
                if ((ds.Tables["TBL_KULLANICILAR"] != null)) {
                    base.Tables.Add(new TBL_KULLANICILARDataTable(ds.Tables["TBL_KULLANICILAR"]));
                }
                if ((ds.Tables["TBL_ODEMESEKILLERI"] != null)) {
                    base.Tables.Add(new TBL_ODEMESEKILLERIDataTable(ds.Tables["TBL_ODEMESEKILLERI"]));
                }
                if ((ds.Tables["TBL_SIPARISBASLIK"] != null)) {
                    base.Tables.Add(new TBL_SIPARISBASLIKDataTable(ds.Tables["TBL_SIPARISBASLIK"]));
                }
                if ((ds.Tables["TBL_SIPARISSATIRLARI"] != null)) {
                    base.Tables.Add(new TBL_SIPARISSATIRLARIDataTable(ds.Tables["TBL_SIPARISSATIRLARI"]));
                }
                if ((ds.Tables["TBL_STOKKARTLARI"] != null)) {
                    base.Tables.Add(new TBL_STOKKARTLARIDataTable(ds.Tables["TBL_STOKKARTLARI"]));
                }
                if ((ds.Tables["View_1"] != null)) {
                    base.Tables.Add(new View_1DataTable(ds.Tables["View_1"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TBL_CARILERDataTable TBL_CARILER {
            get {
                return this.tableTBL_CARILER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TBL_KULLANICILARDataTable TBL_KULLANICILAR {
            get {
                return this.tableTBL_KULLANICILAR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TBL_ODEMESEKILLERIDataTable TBL_ODEMESEKILLERI {
            get {
                return this.tableTBL_ODEMESEKILLERI;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TBL_SIPARISBASLIKDataTable TBL_SIPARISBASLIK {
            get {
                return this.tableTBL_SIPARISBASLIK;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TBL_SIPARISSATIRLARIDataTable TBL_SIPARISSATIRLARI {
            get {
                return this.tableTBL_SIPARISSATIRLARI;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TBL_STOKKARTLARIDataTable TBL_STOKKARTLARI {
            get {
                return this.tableTBL_STOKKARTLARI;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_1DataTable View_1 {
            get {
                return this.tableView_1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            EVKURDataSet cln = ((EVKURDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TBL_CARILER"] != null)) {
                    base.Tables.Add(new TBL_CARILERDataTable(ds.Tables["TBL_CARILER"]));
                }
                if ((ds.Tables["TBL_KULLANICILAR"] != null)) {
                    base.Tables.Add(new TBL_KULLANICILARDataTable(ds.Tables["TBL_KULLANICILAR"]));
                }
                if ((ds.Tables["TBL_ODEMESEKILLERI"] != null)) {
                    base.Tables.Add(new TBL_ODEMESEKILLERIDataTable(ds.Tables["TBL_ODEMESEKILLERI"]));
                }
                if ((ds.Tables["TBL_SIPARISBASLIK"] != null)) {
                    base.Tables.Add(new TBL_SIPARISBASLIKDataTable(ds.Tables["TBL_SIPARISBASLIK"]));
                }
                if ((ds.Tables["TBL_SIPARISSATIRLARI"] != null)) {
                    base.Tables.Add(new TBL_SIPARISSATIRLARIDataTable(ds.Tables["TBL_SIPARISSATIRLARI"]));
                }
                if ((ds.Tables["TBL_STOKKARTLARI"] != null)) {
                    base.Tables.Add(new TBL_STOKKARTLARIDataTable(ds.Tables["TBL_STOKKARTLARI"]));
                }
                if ((ds.Tables["View_1"] != null)) {
                    base.Tables.Add(new View_1DataTable(ds.Tables["View_1"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTBL_CARILER = ((TBL_CARILERDataTable)(base.Tables["TBL_CARILER"]));
            if ((initTable == true)) {
                if ((this.tableTBL_CARILER != null)) {
                    this.tableTBL_CARILER.InitVars();
                }
            }
            this.tableTBL_KULLANICILAR = ((TBL_KULLANICILARDataTable)(base.Tables["TBL_KULLANICILAR"]));
            if ((initTable == true)) {
                if ((this.tableTBL_KULLANICILAR != null)) {
                    this.tableTBL_KULLANICILAR.InitVars();
                }
            }
            this.tableTBL_ODEMESEKILLERI = ((TBL_ODEMESEKILLERIDataTable)(base.Tables["TBL_ODEMESEKILLERI"]));
            if ((initTable == true)) {
                if ((this.tableTBL_ODEMESEKILLERI != null)) {
                    this.tableTBL_ODEMESEKILLERI.InitVars();
                }
            }
            this.tableTBL_SIPARISBASLIK = ((TBL_SIPARISBASLIKDataTable)(base.Tables["TBL_SIPARISBASLIK"]));
            if ((initTable == true)) {
                if ((this.tableTBL_SIPARISBASLIK != null)) {
                    this.tableTBL_SIPARISBASLIK.InitVars();
                }
            }
            this.tableTBL_SIPARISSATIRLARI = ((TBL_SIPARISSATIRLARIDataTable)(base.Tables["TBL_SIPARISSATIRLARI"]));
            if ((initTable == true)) {
                if ((this.tableTBL_SIPARISSATIRLARI != null)) {
                    this.tableTBL_SIPARISSATIRLARI.InitVars();
                }
            }
            this.tableTBL_STOKKARTLARI = ((TBL_STOKKARTLARIDataTable)(base.Tables["TBL_STOKKARTLARI"]));
            if ((initTable == true)) {
                if ((this.tableTBL_STOKKARTLARI != null)) {
                    this.tableTBL_STOKKARTLARI.InitVars();
                }
            }
            this.tableView_1 = ((View_1DataTable)(base.Tables["View_1"]));
            if ((initTable == true)) {
                if ((this.tableView_1 != null)) {
                    this.tableView_1.InitVars();
                }
            }
            this.relationFK_TBL_SIPARISBASLIK_TBL_CARILER = this.Relations["FK_TBL_SIPARISBASLIK_TBL_CARILER"];
            this.relationFK_TBL_SIPARISBASLIK_TBL_ODEMESEKILLERI = this.Relations["FK_TBL_SIPARISBASLIK_TBL_ODEMESEKILLERI"];
            this.relationFK_TBL_SIPARISSATIRLARI_TBL_SIPARISBASLIK = this.Relations["FK_TBL_SIPARISSATIRLARI_TBL_SIPARISBASLIK"];
            this.relationFK_TBL_SIPARISSATIRLARI_TBL_STOKKARTLARI = this.Relations["FK_TBL_SIPARISSATIRLARI_TBL_STOKKARTLARI"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "EVKURDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/EVKURDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTBL_CARILER = new TBL_CARILERDataTable();
            base.Tables.Add(this.tableTBL_CARILER);
            this.tableTBL_KULLANICILAR = new TBL_KULLANICILARDataTable();
            base.Tables.Add(this.tableTBL_KULLANICILAR);
            this.tableTBL_ODEMESEKILLERI = new TBL_ODEMESEKILLERIDataTable();
            base.Tables.Add(this.tableTBL_ODEMESEKILLERI);
            this.tableTBL_SIPARISBASLIK = new TBL_SIPARISBASLIKDataTable();
            base.Tables.Add(this.tableTBL_SIPARISBASLIK);
            this.tableTBL_SIPARISSATIRLARI = new TBL_SIPARISSATIRLARIDataTable();
            base.Tables.Add(this.tableTBL_SIPARISSATIRLARI);
            this.tableTBL_STOKKARTLARI = new TBL_STOKKARTLARIDataTable();
            base.Tables.Add(this.tableTBL_STOKKARTLARI);
            this.tableView_1 = new View_1DataTable();
            base.Tables.Add(this.tableView_1);
            this.relationFK_TBL_SIPARISBASLIK_TBL_CARILER = new global::System.Data.DataRelation("FK_TBL_SIPARISBASLIK_TBL_CARILER", new global::System.Data.DataColumn[] {
                        this.tableTBL_CARILER.CARIREFERANSColumn}, new global::System.Data.DataColumn[] {
                        this.tableTBL_SIPARISBASLIK.CARIREFERANSColumn}, false);
            this.Relations.Add(this.relationFK_TBL_SIPARISBASLIK_TBL_CARILER);
            this.relationFK_TBL_SIPARISBASLIK_TBL_ODEMESEKILLERI = new global::System.Data.DataRelation("FK_TBL_SIPARISBASLIK_TBL_ODEMESEKILLERI", new global::System.Data.DataColumn[] {
                        this.tableTBL_ODEMESEKILLERI.ODEMEREFERANSColumn}, new global::System.Data.DataColumn[] {
                        this.tableTBL_SIPARISBASLIK.ODEMEREFERANSColumn}, false);
            this.Relations.Add(this.relationFK_TBL_SIPARISBASLIK_TBL_ODEMESEKILLERI);
            this.relationFK_TBL_SIPARISSATIRLARI_TBL_SIPARISBASLIK = new global::System.Data.DataRelation("FK_TBL_SIPARISSATIRLARI_TBL_SIPARISBASLIK", new global::System.Data.DataColumn[] {
                        this.tableTBL_SIPARISBASLIK.SIPARISBASLIKREFERANSColumn}, new global::System.Data.DataColumn[] {
                        this.tableTBL_SIPARISSATIRLARI.SIPARISBASLIKREFERANSColumn}, false);
            this.Relations.Add(this.relationFK_TBL_SIPARISSATIRLARI_TBL_SIPARISBASLIK);
            this.relationFK_TBL_SIPARISSATIRLARI_TBL_STOKKARTLARI = new global::System.Data.DataRelation("FK_TBL_SIPARISSATIRLARI_TBL_STOKKARTLARI", new global::System.Data.DataColumn[] {
                        this.tableTBL_STOKKARTLARI.STOKREFERANSColumn}, new global::System.Data.DataColumn[] {
                        this.tableTBL_SIPARISSATIRLARI.STOKREFERANSColumn}, false);
            this.Relations.Add(this.relationFK_TBL_SIPARISSATIRLARI_TBL_STOKKARTLARI);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTBL_CARILER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTBL_KULLANICILAR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTBL_ODEMESEKILLERI() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTBL_SIPARISBASLIK() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTBL_SIPARISSATIRLARI() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTBL_STOKKARTLARI() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            EVKURDataSet ds = new EVKURDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TBL_CARILERRowChangeEventHandler(object sender, TBL_CARILERRowChangeEvent e);
        
        public delegate void TBL_KULLANICILARRowChangeEventHandler(object sender, TBL_KULLANICILARRowChangeEvent e);
        
        public delegate void TBL_ODEMESEKILLERIRowChangeEventHandler(object sender, TBL_ODEMESEKILLERIRowChangeEvent e);
        
        public delegate void TBL_SIPARISBASLIKRowChangeEventHandler(object sender, TBL_SIPARISBASLIKRowChangeEvent e);
        
        public delegate void TBL_SIPARISSATIRLARIRowChangeEventHandler(object sender, TBL_SIPARISSATIRLARIRowChangeEvent e);
        
        public delegate void TBL_STOKKARTLARIRowChangeEventHandler(object sender, TBL_STOKKARTLARIRowChangeEvent e);
        
        public delegate void View_1RowChangeEventHandler(object sender, View_1RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TBL_CARILERDataTable : global::System.Data.TypedTableBase<TBL_CARILERRow> {
            
            private global::System.Data.DataColumn columnCARIREFERANS;
            
            private global::System.Data.DataColumn columnAD;
            
            private global::System.Data.DataColumn columnSOYAD;
            
            private global::System.Data.DataColumn columnTESLIMADRESI;
            
            private global::System.Data.DataColumn columnFATURAADRESI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_CARILERDataTable() {
                this.TableName = "TBL_CARILER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TBL_CARILERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TBL_CARILERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CARIREFERANSColumn {
                get {
                    return this.columnCARIREFERANS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADColumn {
                get {
                    return this.columnAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOYADColumn {
                get {
                    return this.columnSOYAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TESLIMADRESIColumn {
                get {
                    return this.columnTESLIMADRESI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FATURAADRESIColumn {
                get {
                    return this.columnFATURAADRESI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_CARILERRow this[int index] {
                get {
                    return ((TBL_CARILERRow)(this.Rows[index]));
                }
            }
            
            public event TBL_CARILERRowChangeEventHandler TBL_CARILERRowChanging;
            
            public event TBL_CARILERRowChangeEventHandler TBL_CARILERRowChanged;
            
            public event TBL_CARILERRowChangeEventHandler TBL_CARILERRowDeleting;
            
            public event TBL_CARILERRowChangeEventHandler TBL_CARILERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTBL_CARILERRow(TBL_CARILERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_CARILERRow AddTBL_CARILERRow(string AD, string SOYAD, string TESLIMADRESI, string FATURAADRESI) {
                TBL_CARILERRow rowTBL_CARILERRow = ((TBL_CARILERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        AD,
                        SOYAD,
                        TESLIMADRESI,
                        FATURAADRESI};
                rowTBL_CARILERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTBL_CARILERRow);
                return rowTBL_CARILERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_CARILERRow FindByCARIREFERANS(int CARIREFERANS) {
                return ((TBL_CARILERRow)(this.Rows.Find(new object[] {
                            CARIREFERANS})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TBL_CARILERDataTable cln = ((TBL_CARILERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TBL_CARILERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCARIREFERANS = base.Columns["CARIREFERANS"];
                this.columnAD = base.Columns["AD"];
                this.columnSOYAD = base.Columns["SOYAD"];
                this.columnTESLIMADRESI = base.Columns["TESLIMADRESI"];
                this.columnFATURAADRESI = base.Columns["FATURAADRESI"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCARIREFERANS = new global::System.Data.DataColumn("CARIREFERANS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCARIREFERANS);
                this.columnAD = new global::System.Data.DataColumn("AD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAD);
                this.columnSOYAD = new global::System.Data.DataColumn("SOYAD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOYAD);
                this.columnTESLIMADRESI = new global::System.Data.DataColumn("TESLIMADRESI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTESLIMADRESI);
                this.columnFATURAADRESI = new global::System.Data.DataColumn("FATURAADRESI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFATURAADRESI);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCARIREFERANS}, true));
                this.columnCARIREFERANS.AutoIncrement = true;
                this.columnCARIREFERANS.AutoIncrementSeed = -1;
                this.columnCARIREFERANS.AutoIncrementStep = -1;
                this.columnCARIREFERANS.AllowDBNull = false;
                this.columnCARIREFERANS.ReadOnly = true;
                this.columnCARIREFERANS.Unique = true;
                this.columnAD.MaxLength = 50;
                this.columnSOYAD.MaxLength = 50;
                this.columnTESLIMADRESI.MaxLength = 250;
                this.columnFATURAADRESI.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_CARILERRow NewTBL_CARILERRow() {
                return ((TBL_CARILERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TBL_CARILERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TBL_CARILERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TBL_CARILERRowChanged != null)) {
                    this.TBL_CARILERRowChanged(this, new TBL_CARILERRowChangeEvent(((TBL_CARILERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TBL_CARILERRowChanging != null)) {
                    this.TBL_CARILERRowChanging(this, new TBL_CARILERRowChangeEvent(((TBL_CARILERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TBL_CARILERRowDeleted != null)) {
                    this.TBL_CARILERRowDeleted(this, new TBL_CARILERRowChangeEvent(((TBL_CARILERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TBL_CARILERRowDeleting != null)) {
                    this.TBL_CARILERRowDeleting(this, new TBL_CARILERRowChangeEvent(((TBL_CARILERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTBL_CARILERRow(TBL_CARILERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EVKURDataSet ds = new EVKURDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TBL_CARILERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TBL_KULLANICILARDataTable : global::System.Data.TypedTableBase<TBL_KULLANICILARRow> {
            
            private global::System.Data.DataColumn columnKULLANICIID;
            
            private global::System.Data.DataColumn columnKULLANICIADI;
            
            private global::System.Data.DataColumn columnSIFRE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_KULLANICILARDataTable() {
                this.TableName = "TBL_KULLANICILAR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TBL_KULLANICILARDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TBL_KULLANICILARDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KULLANICIIDColumn {
                get {
                    return this.columnKULLANICIID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KULLANICIADIColumn {
                get {
                    return this.columnKULLANICIADI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIFREColumn {
                get {
                    return this.columnSIFRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_KULLANICILARRow this[int index] {
                get {
                    return ((TBL_KULLANICILARRow)(this.Rows[index]));
                }
            }
            
            public event TBL_KULLANICILARRowChangeEventHandler TBL_KULLANICILARRowChanging;
            
            public event TBL_KULLANICILARRowChangeEventHandler TBL_KULLANICILARRowChanged;
            
            public event TBL_KULLANICILARRowChangeEventHandler TBL_KULLANICILARRowDeleting;
            
            public event TBL_KULLANICILARRowChangeEventHandler TBL_KULLANICILARRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTBL_KULLANICILARRow(TBL_KULLANICILARRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_KULLANICILARRow AddTBL_KULLANICILARRow(int KULLANICIID, string KULLANICIADI, string SIFRE) {
                TBL_KULLANICILARRow rowTBL_KULLANICILARRow = ((TBL_KULLANICILARRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KULLANICIID,
                        KULLANICIADI,
                        SIFRE};
                rowTBL_KULLANICILARRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTBL_KULLANICILARRow);
                return rowTBL_KULLANICILARRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_KULLANICILARRow FindByKULLANICIID(int KULLANICIID) {
                return ((TBL_KULLANICILARRow)(this.Rows.Find(new object[] {
                            KULLANICIID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TBL_KULLANICILARDataTable cln = ((TBL_KULLANICILARDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TBL_KULLANICILARDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKULLANICIID = base.Columns["KULLANICIID"];
                this.columnKULLANICIADI = base.Columns["KULLANICIADI"];
                this.columnSIFRE = base.Columns["SIFRE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKULLANICIID = new global::System.Data.DataColumn("KULLANICIID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKULLANICIID);
                this.columnKULLANICIADI = new global::System.Data.DataColumn("KULLANICIADI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKULLANICIADI);
                this.columnSIFRE = new global::System.Data.DataColumn("SIFRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIFRE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnKULLANICIID}, true));
                this.columnKULLANICIID.AllowDBNull = false;
                this.columnKULLANICIID.Unique = true;
                this.columnKULLANICIADI.MaxLength = 10;
                this.columnSIFRE.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_KULLANICILARRow NewTBL_KULLANICILARRow() {
                return ((TBL_KULLANICILARRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TBL_KULLANICILARRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TBL_KULLANICILARRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TBL_KULLANICILARRowChanged != null)) {
                    this.TBL_KULLANICILARRowChanged(this, new TBL_KULLANICILARRowChangeEvent(((TBL_KULLANICILARRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TBL_KULLANICILARRowChanging != null)) {
                    this.TBL_KULLANICILARRowChanging(this, new TBL_KULLANICILARRowChangeEvent(((TBL_KULLANICILARRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TBL_KULLANICILARRowDeleted != null)) {
                    this.TBL_KULLANICILARRowDeleted(this, new TBL_KULLANICILARRowChangeEvent(((TBL_KULLANICILARRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TBL_KULLANICILARRowDeleting != null)) {
                    this.TBL_KULLANICILARRowDeleting(this, new TBL_KULLANICILARRowChangeEvent(((TBL_KULLANICILARRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTBL_KULLANICILARRow(TBL_KULLANICILARRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EVKURDataSet ds = new EVKURDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TBL_KULLANICILARDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TBL_ODEMESEKILLERIDataTable : global::System.Data.TypedTableBase<TBL_ODEMESEKILLERIRow> {
            
            private global::System.Data.DataColumn columnODEMEREFERANS;
            
            private global::System.Data.DataColumn columnACIKLAMA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_ODEMESEKILLERIDataTable() {
                this.TableName = "TBL_ODEMESEKILLERI";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TBL_ODEMESEKILLERIDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TBL_ODEMESEKILLERIDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ODEMEREFERANSColumn {
                get {
                    return this.columnODEMEREFERANS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ACIKLAMAColumn {
                get {
                    return this.columnACIKLAMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_ODEMESEKILLERIRow this[int index] {
                get {
                    return ((TBL_ODEMESEKILLERIRow)(this.Rows[index]));
                }
            }
            
            public event TBL_ODEMESEKILLERIRowChangeEventHandler TBL_ODEMESEKILLERIRowChanging;
            
            public event TBL_ODEMESEKILLERIRowChangeEventHandler TBL_ODEMESEKILLERIRowChanged;
            
            public event TBL_ODEMESEKILLERIRowChangeEventHandler TBL_ODEMESEKILLERIRowDeleting;
            
            public event TBL_ODEMESEKILLERIRowChangeEventHandler TBL_ODEMESEKILLERIRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTBL_ODEMESEKILLERIRow(TBL_ODEMESEKILLERIRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_ODEMESEKILLERIRow AddTBL_ODEMESEKILLERIRow(string ACIKLAMA) {
                TBL_ODEMESEKILLERIRow rowTBL_ODEMESEKILLERIRow = ((TBL_ODEMESEKILLERIRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ACIKLAMA};
                rowTBL_ODEMESEKILLERIRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTBL_ODEMESEKILLERIRow);
                return rowTBL_ODEMESEKILLERIRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_ODEMESEKILLERIRow FindByODEMEREFERANS(int ODEMEREFERANS) {
                return ((TBL_ODEMESEKILLERIRow)(this.Rows.Find(new object[] {
                            ODEMEREFERANS})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TBL_ODEMESEKILLERIDataTable cln = ((TBL_ODEMESEKILLERIDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TBL_ODEMESEKILLERIDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnODEMEREFERANS = base.Columns["ODEMEREFERANS"];
                this.columnACIKLAMA = base.Columns["ACIKLAMA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnODEMEREFERANS = new global::System.Data.DataColumn("ODEMEREFERANS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnODEMEREFERANS);
                this.columnACIKLAMA = new global::System.Data.DataColumn("ACIKLAMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACIKLAMA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnODEMEREFERANS}, true));
                this.columnODEMEREFERANS.AutoIncrement = true;
                this.columnODEMEREFERANS.AutoIncrementSeed = -1;
                this.columnODEMEREFERANS.AutoIncrementStep = -1;
                this.columnODEMEREFERANS.AllowDBNull = false;
                this.columnODEMEREFERANS.ReadOnly = true;
                this.columnODEMEREFERANS.Unique = true;
                this.columnACIKLAMA.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_ODEMESEKILLERIRow NewTBL_ODEMESEKILLERIRow() {
                return ((TBL_ODEMESEKILLERIRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TBL_ODEMESEKILLERIRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TBL_ODEMESEKILLERIRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TBL_ODEMESEKILLERIRowChanged != null)) {
                    this.TBL_ODEMESEKILLERIRowChanged(this, new TBL_ODEMESEKILLERIRowChangeEvent(((TBL_ODEMESEKILLERIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TBL_ODEMESEKILLERIRowChanging != null)) {
                    this.TBL_ODEMESEKILLERIRowChanging(this, new TBL_ODEMESEKILLERIRowChangeEvent(((TBL_ODEMESEKILLERIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TBL_ODEMESEKILLERIRowDeleted != null)) {
                    this.TBL_ODEMESEKILLERIRowDeleted(this, new TBL_ODEMESEKILLERIRowChangeEvent(((TBL_ODEMESEKILLERIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TBL_ODEMESEKILLERIRowDeleting != null)) {
                    this.TBL_ODEMESEKILLERIRowDeleting(this, new TBL_ODEMESEKILLERIRowChangeEvent(((TBL_ODEMESEKILLERIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTBL_ODEMESEKILLERIRow(TBL_ODEMESEKILLERIRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EVKURDataSet ds = new EVKURDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TBL_ODEMESEKILLERIDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TBL_SIPARISBASLIKDataTable : global::System.Data.TypedTableBase<TBL_SIPARISBASLIKRow> {
            
            private global::System.Data.DataColumn columnSIPARISBASLIKREFERANS;
            
            private global::System.Data.DataColumn columnTARIH;
            
            private global::System.Data.DataColumn columnCARIREFERANS;
            
            private global::System.Data.DataColumn columnTOPLAMFIYAT;
            
            private global::System.Data.DataColumn columnODEMEREFERANS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_SIPARISBASLIKDataTable() {
                this.TableName = "TBL_SIPARISBASLIK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TBL_SIPARISBASLIKDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TBL_SIPARISBASLIKDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIPARISBASLIKREFERANSColumn {
                get {
                    return this.columnSIPARISBASLIKREFERANS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TARIHColumn {
                get {
                    return this.columnTARIH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CARIREFERANSColumn {
                get {
                    return this.columnCARIREFERANS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TOPLAMFIYATColumn {
                get {
                    return this.columnTOPLAMFIYAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ODEMEREFERANSColumn {
                get {
                    return this.columnODEMEREFERANS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_SIPARISBASLIKRow this[int index] {
                get {
                    return ((TBL_SIPARISBASLIKRow)(this.Rows[index]));
                }
            }
            
            public event TBL_SIPARISBASLIKRowChangeEventHandler TBL_SIPARISBASLIKRowChanging;
            
            public event TBL_SIPARISBASLIKRowChangeEventHandler TBL_SIPARISBASLIKRowChanged;
            
            public event TBL_SIPARISBASLIKRowChangeEventHandler TBL_SIPARISBASLIKRowDeleting;
            
            public event TBL_SIPARISBASLIKRowChangeEventHandler TBL_SIPARISBASLIKRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTBL_SIPARISBASLIKRow(TBL_SIPARISBASLIKRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_SIPARISBASLIKRow AddTBL_SIPARISBASLIKRow(System.DateTime TARIH, TBL_CARILERRow parentTBL_CARILERRowByFK_TBL_SIPARISBASLIK_TBL_CARILER, decimal TOPLAMFIYAT, TBL_ODEMESEKILLERIRow parentTBL_ODEMESEKILLERIRowByFK_TBL_SIPARISBASLIK_TBL_ODEMESEKILLERI) {
                TBL_SIPARISBASLIKRow rowTBL_SIPARISBASLIKRow = ((TBL_SIPARISBASLIKRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TARIH,
                        null,
                        TOPLAMFIYAT,
                        null};
                if ((parentTBL_CARILERRowByFK_TBL_SIPARISBASLIK_TBL_CARILER != null)) {
                    columnValuesArray[2] = parentTBL_CARILERRowByFK_TBL_SIPARISBASLIK_TBL_CARILER[0];
                }
                if ((parentTBL_ODEMESEKILLERIRowByFK_TBL_SIPARISBASLIK_TBL_ODEMESEKILLERI != null)) {
                    columnValuesArray[4] = parentTBL_ODEMESEKILLERIRowByFK_TBL_SIPARISBASLIK_TBL_ODEMESEKILLERI[0];
                }
                rowTBL_SIPARISBASLIKRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTBL_SIPARISBASLIKRow);
                return rowTBL_SIPARISBASLIKRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_SIPARISBASLIKRow FindBySIPARISBASLIKREFERANS(int SIPARISBASLIKREFERANS) {
                return ((TBL_SIPARISBASLIKRow)(this.Rows.Find(new object[] {
                            SIPARISBASLIKREFERANS})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TBL_SIPARISBASLIKDataTable cln = ((TBL_SIPARISBASLIKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TBL_SIPARISBASLIKDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSIPARISBASLIKREFERANS = base.Columns["SIPARISBASLIKREFERANS"];
                this.columnTARIH = base.Columns["TARIH"];
                this.columnCARIREFERANS = base.Columns["CARIREFERANS"];
                this.columnTOPLAMFIYAT = base.Columns["TOPLAMFIYAT"];
                this.columnODEMEREFERANS = base.Columns["ODEMEREFERANS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSIPARISBASLIKREFERANS = new global::System.Data.DataColumn("SIPARISBASLIKREFERANS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIPARISBASLIKREFERANS);
                this.columnTARIH = new global::System.Data.DataColumn("TARIH", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTARIH);
                this.columnCARIREFERANS = new global::System.Data.DataColumn("CARIREFERANS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCARIREFERANS);
                this.columnTOPLAMFIYAT = new global::System.Data.DataColumn("TOPLAMFIYAT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOPLAMFIYAT);
                this.columnODEMEREFERANS = new global::System.Data.DataColumn("ODEMEREFERANS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnODEMEREFERANS);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSIPARISBASLIKREFERANS}, true));
                this.columnSIPARISBASLIKREFERANS.AutoIncrement = true;
                this.columnSIPARISBASLIKREFERANS.AutoIncrementSeed = -1;
                this.columnSIPARISBASLIKREFERANS.AutoIncrementStep = -1;
                this.columnSIPARISBASLIKREFERANS.AllowDBNull = false;
                this.columnSIPARISBASLIKREFERANS.ReadOnly = true;
                this.columnSIPARISBASLIKREFERANS.Unique = true;
                this.columnODEMEREFERANS.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_SIPARISBASLIKRow NewTBL_SIPARISBASLIKRow() {
                return ((TBL_SIPARISBASLIKRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TBL_SIPARISBASLIKRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TBL_SIPARISBASLIKRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TBL_SIPARISBASLIKRowChanged != null)) {
                    this.TBL_SIPARISBASLIKRowChanged(this, new TBL_SIPARISBASLIKRowChangeEvent(((TBL_SIPARISBASLIKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TBL_SIPARISBASLIKRowChanging != null)) {
                    this.TBL_SIPARISBASLIKRowChanging(this, new TBL_SIPARISBASLIKRowChangeEvent(((TBL_SIPARISBASLIKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TBL_SIPARISBASLIKRowDeleted != null)) {
                    this.TBL_SIPARISBASLIKRowDeleted(this, new TBL_SIPARISBASLIKRowChangeEvent(((TBL_SIPARISBASLIKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TBL_SIPARISBASLIKRowDeleting != null)) {
                    this.TBL_SIPARISBASLIKRowDeleting(this, new TBL_SIPARISBASLIKRowChangeEvent(((TBL_SIPARISBASLIKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTBL_SIPARISBASLIKRow(TBL_SIPARISBASLIKRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EVKURDataSet ds = new EVKURDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TBL_SIPARISBASLIKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TBL_SIPARISSATIRLARIDataTable : global::System.Data.TypedTableBase<TBL_SIPARISSATIRLARIRow> {
            
            private global::System.Data.DataColumn columnSIPARISSATIRREFERANS;
            
            private global::System.Data.DataColumn columnSIPARISBASLIKREFERANS;
            
            private global::System.Data.DataColumn columnSTOKREFERANS;
            
            private global::System.Data.DataColumn columnADET;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_SIPARISSATIRLARIDataTable() {
                this.TableName = "TBL_SIPARISSATIRLARI";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TBL_SIPARISSATIRLARIDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TBL_SIPARISSATIRLARIDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIPARISSATIRREFERANSColumn {
                get {
                    return this.columnSIPARISSATIRREFERANS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIPARISBASLIKREFERANSColumn {
                get {
                    return this.columnSIPARISBASLIKREFERANS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STOKREFERANSColumn {
                get {
                    return this.columnSTOKREFERANS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADETColumn {
                get {
                    return this.columnADET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_SIPARISSATIRLARIRow this[int index] {
                get {
                    return ((TBL_SIPARISSATIRLARIRow)(this.Rows[index]));
                }
            }
            
            public event TBL_SIPARISSATIRLARIRowChangeEventHandler TBL_SIPARISSATIRLARIRowChanging;
            
            public event TBL_SIPARISSATIRLARIRowChangeEventHandler TBL_SIPARISSATIRLARIRowChanged;
            
            public event TBL_SIPARISSATIRLARIRowChangeEventHandler TBL_SIPARISSATIRLARIRowDeleting;
            
            public event TBL_SIPARISSATIRLARIRowChangeEventHandler TBL_SIPARISSATIRLARIRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTBL_SIPARISSATIRLARIRow(TBL_SIPARISSATIRLARIRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_SIPARISSATIRLARIRow AddTBL_SIPARISSATIRLARIRow(TBL_SIPARISBASLIKRow parentTBL_SIPARISBASLIKRowByFK_TBL_SIPARISSATIRLARI_TBL_SIPARISBASLIK, TBL_STOKKARTLARIRow parentTBL_STOKKARTLARIRowByFK_TBL_SIPARISSATIRLARI_TBL_STOKKARTLARI, short ADET) {
                TBL_SIPARISSATIRLARIRow rowTBL_SIPARISSATIRLARIRow = ((TBL_SIPARISSATIRLARIRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        ADET};
                if ((parentTBL_SIPARISBASLIKRowByFK_TBL_SIPARISSATIRLARI_TBL_SIPARISBASLIK != null)) {
                    columnValuesArray[1] = parentTBL_SIPARISBASLIKRowByFK_TBL_SIPARISSATIRLARI_TBL_SIPARISBASLIK[0];
                }
                if ((parentTBL_STOKKARTLARIRowByFK_TBL_SIPARISSATIRLARI_TBL_STOKKARTLARI != null)) {
                    columnValuesArray[2] = parentTBL_STOKKARTLARIRowByFK_TBL_SIPARISSATIRLARI_TBL_STOKKARTLARI[0];
                }
                rowTBL_SIPARISSATIRLARIRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTBL_SIPARISSATIRLARIRow);
                return rowTBL_SIPARISSATIRLARIRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_SIPARISSATIRLARIRow FindBySIPARISSATIRREFERANS(int SIPARISSATIRREFERANS) {
                return ((TBL_SIPARISSATIRLARIRow)(this.Rows.Find(new object[] {
                            SIPARISSATIRREFERANS})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TBL_SIPARISSATIRLARIDataTable cln = ((TBL_SIPARISSATIRLARIDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TBL_SIPARISSATIRLARIDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSIPARISSATIRREFERANS = base.Columns["SIPARISSATIRREFERANS"];
                this.columnSIPARISBASLIKREFERANS = base.Columns["SIPARISBASLIKREFERANS"];
                this.columnSTOKREFERANS = base.Columns["STOKREFERANS"];
                this.columnADET = base.Columns["ADET"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSIPARISSATIRREFERANS = new global::System.Data.DataColumn("SIPARISSATIRREFERANS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIPARISSATIRREFERANS);
                this.columnSIPARISBASLIKREFERANS = new global::System.Data.DataColumn("SIPARISBASLIKREFERANS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIPARISBASLIKREFERANS);
                this.columnSTOKREFERANS = new global::System.Data.DataColumn("STOKREFERANS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOKREFERANS);
                this.columnADET = new global::System.Data.DataColumn("ADET", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADET);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSIPARISSATIRREFERANS}, true));
                this.columnSIPARISSATIRREFERANS.AutoIncrement = true;
                this.columnSIPARISSATIRREFERANS.AutoIncrementSeed = -1;
                this.columnSIPARISSATIRREFERANS.AutoIncrementStep = -1;
                this.columnSIPARISSATIRREFERANS.AllowDBNull = false;
                this.columnSIPARISSATIRREFERANS.ReadOnly = true;
                this.columnSIPARISSATIRREFERANS.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_SIPARISSATIRLARIRow NewTBL_SIPARISSATIRLARIRow() {
                return ((TBL_SIPARISSATIRLARIRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TBL_SIPARISSATIRLARIRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TBL_SIPARISSATIRLARIRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TBL_SIPARISSATIRLARIRowChanged != null)) {
                    this.TBL_SIPARISSATIRLARIRowChanged(this, new TBL_SIPARISSATIRLARIRowChangeEvent(((TBL_SIPARISSATIRLARIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TBL_SIPARISSATIRLARIRowChanging != null)) {
                    this.TBL_SIPARISSATIRLARIRowChanging(this, new TBL_SIPARISSATIRLARIRowChangeEvent(((TBL_SIPARISSATIRLARIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TBL_SIPARISSATIRLARIRowDeleted != null)) {
                    this.TBL_SIPARISSATIRLARIRowDeleted(this, new TBL_SIPARISSATIRLARIRowChangeEvent(((TBL_SIPARISSATIRLARIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TBL_SIPARISSATIRLARIRowDeleting != null)) {
                    this.TBL_SIPARISSATIRLARIRowDeleting(this, new TBL_SIPARISSATIRLARIRowChangeEvent(((TBL_SIPARISSATIRLARIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTBL_SIPARISSATIRLARIRow(TBL_SIPARISSATIRLARIRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EVKURDataSet ds = new EVKURDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TBL_SIPARISSATIRLARIDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TBL_STOKKARTLARIDataTable : global::System.Data.TypedTableBase<TBL_STOKKARTLARIRow> {
            
            private global::System.Data.DataColumn columnSTOKREFERANS;
            
            private global::System.Data.DataColumn columnACIKLAMA;
            
            private global::System.Data.DataColumn columnBIRIMFIYAT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_STOKKARTLARIDataTable() {
                this.TableName = "TBL_STOKKARTLARI";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TBL_STOKKARTLARIDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TBL_STOKKARTLARIDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STOKREFERANSColumn {
                get {
                    return this.columnSTOKREFERANS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ACIKLAMAColumn {
                get {
                    return this.columnACIKLAMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BIRIMFIYATColumn {
                get {
                    return this.columnBIRIMFIYAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_STOKKARTLARIRow this[int index] {
                get {
                    return ((TBL_STOKKARTLARIRow)(this.Rows[index]));
                }
            }
            
            public event TBL_STOKKARTLARIRowChangeEventHandler TBL_STOKKARTLARIRowChanging;
            
            public event TBL_STOKKARTLARIRowChangeEventHandler TBL_STOKKARTLARIRowChanged;
            
            public event TBL_STOKKARTLARIRowChangeEventHandler TBL_STOKKARTLARIRowDeleting;
            
            public event TBL_STOKKARTLARIRowChangeEventHandler TBL_STOKKARTLARIRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTBL_STOKKARTLARIRow(TBL_STOKKARTLARIRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_STOKKARTLARIRow AddTBL_STOKKARTLARIRow(string ACIKLAMA, decimal BIRIMFIYAT) {
                TBL_STOKKARTLARIRow rowTBL_STOKKARTLARIRow = ((TBL_STOKKARTLARIRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ACIKLAMA,
                        BIRIMFIYAT};
                rowTBL_STOKKARTLARIRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTBL_STOKKARTLARIRow);
                return rowTBL_STOKKARTLARIRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_STOKKARTLARIRow FindBySTOKREFERANS(int STOKREFERANS) {
                return ((TBL_STOKKARTLARIRow)(this.Rows.Find(new object[] {
                            STOKREFERANS})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TBL_STOKKARTLARIDataTable cln = ((TBL_STOKKARTLARIDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TBL_STOKKARTLARIDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSTOKREFERANS = base.Columns["STOKREFERANS"];
                this.columnACIKLAMA = base.Columns["ACIKLAMA"];
                this.columnBIRIMFIYAT = base.Columns["BIRIMFIYAT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSTOKREFERANS = new global::System.Data.DataColumn("STOKREFERANS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOKREFERANS);
                this.columnACIKLAMA = new global::System.Data.DataColumn("ACIKLAMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACIKLAMA);
                this.columnBIRIMFIYAT = new global::System.Data.DataColumn("BIRIMFIYAT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBIRIMFIYAT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSTOKREFERANS}, true));
                this.columnSTOKREFERANS.AutoIncrement = true;
                this.columnSTOKREFERANS.AutoIncrementSeed = -1;
                this.columnSTOKREFERANS.AutoIncrementStep = -1;
                this.columnSTOKREFERANS.AllowDBNull = false;
                this.columnSTOKREFERANS.ReadOnly = true;
                this.columnSTOKREFERANS.Unique = true;
                this.columnACIKLAMA.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_STOKKARTLARIRow NewTBL_STOKKARTLARIRow() {
                return ((TBL_STOKKARTLARIRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TBL_STOKKARTLARIRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TBL_STOKKARTLARIRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TBL_STOKKARTLARIRowChanged != null)) {
                    this.TBL_STOKKARTLARIRowChanged(this, new TBL_STOKKARTLARIRowChangeEvent(((TBL_STOKKARTLARIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TBL_STOKKARTLARIRowChanging != null)) {
                    this.TBL_STOKKARTLARIRowChanging(this, new TBL_STOKKARTLARIRowChangeEvent(((TBL_STOKKARTLARIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TBL_STOKKARTLARIRowDeleted != null)) {
                    this.TBL_STOKKARTLARIRowDeleted(this, new TBL_STOKKARTLARIRowChangeEvent(((TBL_STOKKARTLARIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TBL_STOKKARTLARIRowDeleting != null)) {
                    this.TBL_STOKKARTLARIRowDeleting(this, new TBL_STOKKARTLARIRowChangeEvent(((TBL_STOKKARTLARIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTBL_STOKKARTLARIRow(TBL_STOKKARTLARIRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EVKURDataSet ds = new EVKURDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TBL_STOKKARTLARIDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_1DataTable : global::System.Data.TypedTableBase<View_1Row> {
            
            private global::System.Data.DataColumn columnAD;
            
            private global::System.Data.DataColumn columnSOYAD;
            
            private global::System.Data.DataColumn columnACIKLAMA;
            
            private global::System.Data.DataColumn columnTARIH;
            
            private global::System.Data.DataColumn columnSIPARISBASLIKREFERANS;
            
            private global::System.Data.DataColumn columnTOPLAMFIYAT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_1DataTable() {
                this.TableName = "View_1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADColumn {
                get {
                    return this.columnAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOYADColumn {
                get {
                    return this.columnSOYAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ACIKLAMAColumn {
                get {
                    return this.columnACIKLAMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TARIHColumn {
                get {
                    return this.columnTARIH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIPARISBASLIKREFERANSColumn {
                get {
                    return this.columnSIPARISBASLIKREFERANS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TOPLAMFIYATColumn {
                get {
                    return this.columnTOPLAMFIYAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_1Row this[int index] {
                get {
                    return ((View_1Row)(this.Rows[index]));
                }
            }
            
            public event View_1RowChangeEventHandler View_1RowChanging;
            
            public event View_1RowChangeEventHandler View_1RowChanged;
            
            public event View_1RowChangeEventHandler View_1RowDeleting;
            
            public event View_1RowChangeEventHandler View_1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_1Row(View_1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_1Row AddView_1Row(string AD, string SOYAD, string ACIKLAMA, System.DateTime TARIH, int SIPARISBASLIKREFERANS, decimal TOPLAMFIYAT) {
                View_1Row rowView_1Row = ((View_1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AD,
                        SOYAD,
                        ACIKLAMA,
                        TARIH,
                        SIPARISBASLIKREFERANS,
                        TOPLAMFIYAT};
                rowView_1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_1Row);
                return rowView_1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_1Row FindBySIPARISBASLIKREFERANS(int SIPARISBASLIKREFERANS) {
                return ((View_1Row)(this.Rows.Find(new object[] {
                            SIPARISBASLIKREFERANS})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_1DataTable cln = ((View_1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAD = base.Columns["AD"];
                this.columnSOYAD = base.Columns["SOYAD"];
                this.columnACIKLAMA = base.Columns["ACIKLAMA"];
                this.columnTARIH = base.Columns["TARIH"];
                this.columnSIPARISBASLIKREFERANS = base.Columns["SIPARISBASLIKREFERANS"];
                this.columnTOPLAMFIYAT = base.Columns["TOPLAMFIYAT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAD = new global::System.Data.DataColumn("AD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAD);
                this.columnSOYAD = new global::System.Data.DataColumn("SOYAD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOYAD);
                this.columnACIKLAMA = new global::System.Data.DataColumn("ACIKLAMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACIKLAMA);
                this.columnTARIH = new global::System.Data.DataColumn("TARIH", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTARIH);
                this.columnSIPARISBASLIKREFERANS = new global::System.Data.DataColumn("SIPARISBASLIKREFERANS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIPARISBASLIKREFERANS);
                this.columnTOPLAMFIYAT = new global::System.Data.DataColumn("TOPLAMFIYAT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOPLAMFIYAT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSIPARISBASLIKREFERANS}, true));
                this.columnAD.MaxLength = 50;
                this.columnSOYAD.MaxLength = 50;
                this.columnACIKLAMA.MaxLength = 50;
                this.columnSIPARISBASLIKREFERANS.AllowDBNull = false;
                this.columnSIPARISBASLIKREFERANS.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_1Row NewView_1Row() {
                return ((View_1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_1RowChanged != null)) {
                    this.View_1RowChanged(this, new View_1RowChangeEvent(((View_1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_1RowChanging != null)) {
                    this.View_1RowChanging(this, new View_1RowChangeEvent(((View_1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_1RowDeleted != null)) {
                    this.View_1RowDeleted(this, new View_1RowChangeEvent(((View_1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_1RowDeleting != null)) {
                    this.View_1RowDeleting(this, new View_1RowChangeEvent(((View_1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_1Row(View_1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EVKURDataSet ds = new EVKURDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TBL_CARILERRow : global::System.Data.DataRow {
            
            private TBL_CARILERDataTable tableTBL_CARILER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TBL_CARILERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTBL_CARILER = ((TBL_CARILERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CARIREFERANS {
                get {
                    return ((int)(this[this.tableTBL_CARILER.CARIREFERANSColumn]));
                }
                set {
                    this[this.tableTBL_CARILER.CARIREFERANSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AD {
                get {
                    try {
                        return ((string)(this[this.tableTBL_CARILER.ADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AD\' in table \'TBL_CARILER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_CARILER.ADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOYAD {
                get {
                    try {
                        return ((string)(this[this.tableTBL_CARILER.SOYADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOYAD\' in table \'TBL_CARILER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_CARILER.SOYADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TESLIMADRESI {
                get {
                    try {
                        return ((string)(this[this.tableTBL_CARILER.TESLIMADRESIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TESLIMADRESI\' in table \'TBL_CARILER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_CARILER.TESLIMADRESIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FATURAADRESI {
                get {
                    try {
                        return ((string)(this[this.tableTBL_CARILER.FATURAADRESIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FATURAADRESI\' in table \'TBL_CARILER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_CARILER.FATURAADRESIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADNull() {
                return this.IsNull(this.tableTBL_CARILER.ADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADNull() {
                this[this.tableTBL_CARILER.ADColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOYADNull() {
                return this.IsNull(this.tableTBL_CARILER.SOYADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOYADNull() {
                this[this.tableTBL_CARILER.SOYADColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTESLIMADRESINull() {
                return this.IsNull(this.tableTBL_CARILER.TESLIMADRESIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTESLIMADRESINull() {
                this[this.tableTBL_CARILER.TESLIMADRESIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFATURAADRESINull() {
                return this.IsNull(this.tableTBL_CARILER.FATURAADRESIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFATURAADRESINull() {
                this[this.tableTBL_CARILER.FATURAADRESIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_SIPARISBASLIKRow[] GetTBL_SIPARISBASLIKRows() {
                if ((this.Table.ChildRelations["FK_TBL_SIPARISBASLIK_TBL_CARILER"] == null)) {
                    return new TBL_SIPARISBASLIKRow[0];
                }
                else {
                    return ((TBL_SIPARISBASLIKRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TBL_SIPARISBASLIK_TBL_CARILER"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TBL_KULLANICILARRow : global::System.Data.DataRow {
            
            private TBL_KULLANICILARDataTable tableTBL_KULLANICILAR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TBL_KULLANICILARRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTBL_KULLANICILAR = ((TBL_KULLANICILARDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int KULLANICIID {
                get {
                    return ((int)(this[this.tableTBL_KULLANICILAR.KULLANICIIDColumn]));
                }
                set {
                    this[this.tableTBL_KULLANICILAR.KULLANICIIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KULLANICIADI {
                get {
                    try {
                        return ((string)(this[this.tableTBL_KULLANICILAR.KULLANICIADIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KULLANICIADI\' in table \'TBL_KULLANICILAR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_KULLANICILAR.KULLANICIADIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SIFRE {
                get {
                    try {
                        return ((string)(this[this.tableTBL_KULLANICILAR.SIFREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SIFRE\' in table \'TBL_KULLANICILAR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_KULLANICILAR.SIFREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKULLANICIADINull() {
                return this.IsNull(this.tableTBL_KULLANICILAR.KULLANICIADIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKULLANICIADINull() {
                this[this.tableTBL_KULLANICILAR.KULLANICIADIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIFRENull() {
                return this.IsNull(this.tableTBL_KULLANICILAR.SIFREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIFRENull() {
                this[this.tableTBL_KULLANICILAR.SIFREColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TBL_ODEMESEKILLERIRow : global::System.Data.DataRow {
            
            private TBL_ODEMESEKILLERIDataTable tableTBL_ODEMESEKILLERI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TBL_ODEMESEKILLERIRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTBL_ODEMESEKILLERI = ((TBL_ODEMESEKILLERIDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ODEMEREFERANS {
                get {
                    return ((int)(this[this.tableTBL_ODEMESEKILLERI.ODEMEREFERANSColumn]));
                }
                set {
                    this[this.tableTBL_ODEMESEKILLERI.ODEMEREFERANSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACIKLAMA {
                get {
                    try {
                        return ((string)(this[this.tableTBL_ODEMESEKILLERI.ACIKLAMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACIKLAMA\' in table \'TBL_ODEMESEKILLERI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_ODEMESEKILLERI.ACIKLAMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACIKLAMANull() {
                return this.IsNull(this.tableTBL_ODEMESEKILLERI.ACIKLAMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACIKLAMANull() {
                this[this.tableTBL_ODEMESEKILLERI.ACIKLAMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_SIPARISBASLIKRow[] GetTBL_SIPARISBASLIKRows() {
                if ((this.Table.ChildRelations["FK_TBL_SIPARISBASLIK_TBL_ODEMESEKILLERI"] == null)) {
                    return new TBL_SIPARISBASLIKRow[0];
                }
                else {
                    return ((TBL_SIPARISBASLIKRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TBL_SIPARISBASLIK_TBL_ODEMESEKILLERI"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TBL_SIPARISBASLIKRow : global::System.Data.DataRow {
            
            private TBL_SIPARISBASLIKDataTable tableTBL_SIPARISBASLIK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TBL_SIPARISBASLIKRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTBL_SIPARISBASLIK = ((TBL_SIPARISBASLIKDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SIPARISBASLIKREFERANS {
                get {
                    return ((int)(this[this.tableTBL_SIPARISBASLIK.SIPARISBASLIKREFERANSColumn]));
                }
                set {
                    this[this.tableTBL_SIPARISBASLIK.SIPARISBASLIKREFERANSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TARIH {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTBL_SIPARISBASLIK.TARIHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TARIH\' in table \'TBL_SIPARISBASLIK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SIPARISBASLIK.TARIHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CARIREFERANS {
                get {
                    try {
                        return ((int)(this[this.tableTBL_SIPARISBASLIK.CARIREFERANSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CARIREFERANS\' in table \'TBL_SIPARISBASLIK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SIPARISBASLIK.CARIREFERANSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TOPLAMFIYAT {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SIPARISBASLIK.TOPLAMFIYATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOPLAMFIYAT\' in table \'TBL_SIPARISBASLIK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SIPARISBASLIK.TOPLAMFIYATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ODEMEREFERANS {
                get {
                    return ((int)(this[this.tableTBL_SIPARISBASLIK.ODEMEREFERANSColumn]));
                }
                set {
                    this[this.tableTBL_SIPARISBASLIK.ODEMEREFERANSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_CARILERRow TBL_CARILERRow {
                get {
                    return ((TBL_CARILERRow)(this.GetParentRow(this.Table.ParentRelations["FK_TBL_SIPARISBASLIK_TBL_CARILER"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TBL_SIPARISBASLIK_TBL_CARILER"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_ODEMESEKILLERIRow TBL_ODEMESEKILLERIRow {
                get {
                    return ((TBL_ODEMESEKILLERIRow)(this.GetParentRow(this.Table.ParentRelations["FK_TBL_SIPARISBASLIK_TBL_ODEMESEKILLERI"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TBL_SIPARISBASLIK_TBL_ODEMESEKILLERI"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTARIHNull() {
                return this.IsNull(this.tableTBL_SIPARISBASLIK.TARIHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTARIHNull() {
                this[this.tableTBL_SIPARISBASLIK.TARIHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCARIREFERANSNull() {
                return this.IsNull(this.tableTBL_SIPARISBASLIK.CARIREFERANSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCARIREFERANSNull() {
                this[this.tableTBL_SIPARISBASLIK.CARIREFERANSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTOPLAMFIYATNull() {
                return this.IsNull(this.tableTBL_SIPARISBASLIK.TOPLAMFIYATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTOPLAMFIYATNull() {
                this[this.tableTBL_SIPARISBASLIK.TOPLAMFIYATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_SIPARISSATIRLARIRow[] GetTBL_SIPARISSATIRLARIRows() {
                if ((this.Table.ChildRelations["FK_TBL_SIPARISSATIRLARI_TBL_SIPARISBASLIK"] == null)) {
                    return new TBL_SIPARISSATIRLARIRow[0];
                }
                else {
                    return ((TBL_SIPARISSATIRLARIRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TBL_SIPARISSATIRLARI_TBL_SIPARISBASLIK"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TBL_SIPARISSATIRLARIRow : global::System.Data.DataRow {
            
            private TBL_SIPARISSATIRLARIDataTable tableTBL_SIPARISSATIRLARI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TBL_SIPARISSATIRLARIRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTBL_SIPARISSATIRLARI = ((TBL_SIPARISSATIRLARIDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SIPARISSATIRREFERANS {
                get {
                    return ((int)(this[this.tableTBL_SIPARISSATIRLARI.SIPARISSATIRREFERANSColumn]));
                }
                set {
                    this[this.tableTBL_SIPARISSATIRLARI.SIPARISSATIRREFERANSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SIPARISBASLIKREFERANS {
                get {
                    try {
                        return ((int)(this[this.tableTBL_SIPARISSATIRLARI.SIPARISBASLIKREFERANSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SIPARISBASLIKREFERANS\' in table \'TBL_SIPARISSATIRLARI\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SIPARISSATIRLARI.SIPARISBASLIKREFERANSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int STOKREFERANS {
                get {
                    try {
                        return ((int)(this[this.tableTBL_SIPARISSATIRLARI.STOKREFERANSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOKREFERANS\' in table \'TBL_SIPARISSATIRLARI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SIPARISSATIRLARI.STOKREFERANSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ADET {
                get {
                    try {
                        return ((short)(this[this.tableTBL_SIPARISSATIRLARI.ADETColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADET\' in table \'TBL_SIPARISSATIRLARI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SIPARISSATIRLARI.ADETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_SIPARISBASLIKRow TBL_SIPARISBASLIKRow {
                get {
                    return ((TBL_SIPARISBASLIKRow)(this.GetParentRow(this.Table.ParentRelations["FK_TBL_SIPARISSATIRLARI_TBL_SIPARISBASLIK"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TBL_SIPARISSATIRLARI_TBL_SIPARISBASLIK"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_STOKKARTLARIRow TBL_STOKKARTLARIRow {
                get {
                    return ((TBL_STOKKARTLARIRow)(this.GetParentRow(this.Table.ParentRelations["FK_TBL_SIPARISSATIRLARI_TBL_STOKKARTLARI"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TBL_SIPARISSATIRLARI_TBL_STOKKARTLARI"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIPARISBASLIKREFERANSNull() {
                return this.IsNull(this.tableTBL_SIPARISSATIRLARI.SIPARISBASLIKREFERANSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIPARISBASLIKREFERANSNull() {
                this[this.tableTBL_SIPARISSATIRLARI.SIPARISBASLIKREFERANSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTOKREFERANSNull() {
                return this.IsNull(this.tableTBL_SIPARISSATIRLARI.STOKREFERANSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTOKREFERANSNull() {
                this[this.tableTBL_SIPARISSATIRLARI.STOKREFERANSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADETNull() {
                return this.IsNull(this.tableTBL_SIPARISSATIRLARI.ADETColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADETNull() {
                this[this.tableTBL_SIPARISSATIRLARI.ADETColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TBL_STOKKARTLARIRow : global::System.Data.DataRow {
            
            private TBL_STOKKARTLARIDataTable tableTBL_STOKKARTLARI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TBL_STOKKARTLARIRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTBL_STOKKARTLARI = ((TBL_STOKKARTLARIDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int STOKREFERANS {
                get {
                    return ((int)(this[this.tableTBL_STOKKARTLARI.STOKREFERANSColumn]));
                }
                set {
                    this[this.tableTBL_STOKKARTLARI.STOKREFERANSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACIKLAMA {
                get {
                    try {
                        return ((string)(this[this.tableTBL_STOKKARTLARI.ACIKLAMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACIKLAMA\' in table \'TBL_STOKKARTLARI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_STOKKARTLARI.ACIKLAMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BIRIMFIYAT {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_STOKKARTLARI.BIRIMFIYATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BIRIMFIYAT\' in table \'TBL_STOKKARTLARI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_STOKKARTLARI.BIRIMFIYATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACIKLAMANull() {
                return this.IsNull(this.tableTBL_STOKKARTLARI.ACIKLAMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACIKLAMANull() {
                this[this.tableTBL_STOKKARTLARI.ACIKLAMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBIRIMFIYATNull() {
                return this.IsNull(this.tableTBL_STOKKARTLARI.BIRIMFIYATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBIRIMFIYATNull() {
                this[this.tableTBL_STOKKARTLARI.BIRIMFIYATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_SIPARISSATIRLARIRow[] GetTBL_SIPARISSATIRLARIRows() {
                if ((this.Table.ChildRelations["FK_TBL_SIPARISSATIRLARI_TBL_STOKKARTLARI"] == null)) {
                    return new TBL_SIPARISSATIRLARIRow[0];
                }
                else {
                    return ((TBL_SIPARISSATIRLARIRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TBL_SIPARISSATIRLARI_TBL_STOKKARTLARI"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_1Row : global::System.Data.DataRow {
            
            private View_1DataTable tableView_1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_1 = ((View_1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AD {
                get {
                    try {
                        return ((string)(this[this.tableView_1.ADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AD\' in table \'View_1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_1.ADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOYAD {
                get {
                    try {
                        return ((string)(this[this.tableView_1.SOYADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOYAD\' in table \'View_1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_1.SOYADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACIKLAMA {
                get {
                    try {
                        return ((string)(this[this.tableView_1.ACIKLAMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACIKLAMA\' in table \'View_1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_1.ACIKLAMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TARIH {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_1.TARIHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TARIH\' in table \'View_1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_1.TARIHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SIPARISBASLIKREFERANS {
                get {
                    return ((int)(this[this.tableView_1.SIPARISBASLIKREFERANSColumn]));
                }
                set {
                    this[this.tableView_1.SIPARISBASLIKREFERANSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TOPLAMFIYAT {
                get {
                    try {
                        return ((decimal)(this[this.tableView_1.TOPLAMFIYATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOPLAMFIYAT\' in table \'View_1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_1.TOPLAMFIYATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADNull() {
                return this.IsNull(this.tableView_1.ADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADNull() {
                this[this.tableView_1.ADColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOYADNull() {
                return this.IsNull(this.tableView_1.SOYADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOYADNull() {
                this[this.tableView_1.SOYADColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACIKLAMANull() {
                return this.IsNull(this.tableView_1.ACIKLAMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACIKLAMANull() {
                this[this.tableView_1.ACIKLAMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTARIHNull() {
                return this.IsNull(this.tableView_1.TARIHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTARIHNull() {
                this[this.tableView_1.TARIHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTOPLAMFIYATNull() {
                return this.IsNull(this.tableView_1.TOPLAMFIYATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTOPLAMFIYATNull() {
                this[this.tableView_1.TOPLAMFIYATColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TBL_CARILERRowChangeEvent : global::System.EventArgs {
            
            private TBL_CARILERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_CARILERRowChangeEvent(TBL_CARILERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_CARILERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TBL_KULLANICILARRowChangeEvent : global::System.EventArgs {
            
            private TBL_KULLANICILARRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_KULLANICILARRowChangeEvent(TBL_KULLANICILARRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_KULLANICILARRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TBL_ODEMESEKILLERIRowChangeEvent : global::System.EventArgs {
            
            private TBL_ODEMESEKILLERIRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_ODEMESEKILLERIRowChangeEvent(TBL_ODEMESEKILLERIRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_ODEMESEKILLERIRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TBL_SIPARISBASLIKRowChangeEvent : global::System.EventArgs {
            
            private TBL_SIPARISBASLIKRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_SIPARISBASLIKRowChangeEvent(TBL_SIPARISBASLIKRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_SIPARISBASLIKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TBL_SIPARISSATIRLARIRowChangeEvent : global::System.EventArgs {
            
            private TBL_SIPARISSATIRLARIRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_SIPARISSATIRLARIRowChangeEvent(TBL_SIPARISSATIRLARIRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_SIPARISSATIRLARIRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TBL_STOKKARTLARIRowChangeEvent : global::System.EventArgs {
            
            private TBL_STOKKARTLARIRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_STOKKARTLARIRowChangeEvent(TBL_STOKKARTLARIRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBL_STOKKARTLARIRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_1RowChangeEvent : global::System.EventArgs {
            
            private View_1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_1RowChangeEvent(View_1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace WindowsFormsApplication3.EVKURDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TBL_CARILERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TBL_CARILERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TBL_CARILER";
            tableMapping.ColumnMappings.Add("CARIREFERANS", "CARIREFERANS");
            tableMapping.ColumnMappings.Add("AD", "AD");
            tableMapping.ColumnMappings.Add("SOYAD", "SOYAD");
            tableMapping.ColumnMappings.Add("TESLIMADRESI", "TESLIMADRESI");
            tableMapping.ColumnMappings.Add("FATURAADRESI", "FATURAADRESI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TBL_CARILER] WHERE (([CARIREFERANS] = @Original_CARIREFERANS) AND ((@IsNull_AD = 1 AND [AD] IS NULL) OR ([AD] = @Original_AD)) AND ((@IsNull_SOYAD = 1 AND [SOYAD] IS NULL) OR ([SOYAD] = @Original_SOYAD)) AND ((@IsNull_TESLIMADRESI = 1 AND [TESLIMADRESI] IS NULL) OR ([TESLIMADRESI] = @Original_TESLIMADRESI)) AND ((@IsNull_FATURAADRESI = 1 AND [FATURAADRESI] IS NULL) OR ([FATURAADRESI] = @Original_FATURAADRESI)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CARIREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CARIREFERANS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SOYAD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOYAD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SOYAD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOYAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TESLIMADRESI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TESLIMADRESI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TESLIMADRESI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TESLIMADRESI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FATURAADRESI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FATURAADRESI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FATURAADRESI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FATURAADRESI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TBL_CARILER] ([AD], [SOYAD], [TESLIMADRESI], [FATURAADRESI]) V" +
                "ALUES (@AD, @SOYAD, @TESLIMADRESI, @FATURAADRESI);\r\nSELECT CARIREFERANS, AD, SOY" +
                "AD, TESLIMADRESI, FATURAADRESI FROM TBL_CARILER WHERE (CARIREFERANS = SCOPE_IDEN" +
                "TITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SOYAD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOYAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TESLIMADRESI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TESLIMADRESI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FATURAADRESI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FATURAADRESI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TBL_CARILER] SET [AD] = @AD, [SOYAD] = @SOYAD, [TESLIMADRESI] = @TESLIMADRESI, [FATURAADRESI] = @FATURAADRESI WHERE (([CARIREFERANS] = @Original_CARIREFERANS) AND ((@IsNull_AD = 1 AND [AD] IS NULL) OR ([AD] = @Original_AD)) AND ((@IsNull_SOYAD = 1 AND [SOYAD] IS NULL) OR ([SOYAD] = @Original_SOYAD)) AND ((@IsNull_TESLIMADRESI = 1 AND [TESLIMADRESI] IS NULL) OR ([TESLIMADRESI] = @Original_TESLIMADRESI)) AND ((@IsNull_FATURAADRESI = 1 AND [FATURAADRESI] IS NULL) OR ([FATURAADRESI] = @Original_FATURAADRESI)));
SELECT CARIREFERANS, AD, SOYAD, TESLIMADRESI, FATURAADRESI FROM TBL_CARILER WHERE (CARIREFERANS = @CARIREFERANS)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SOYAD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOYAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TESLIMADRESI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TESLIMADRESI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FATURAADRESI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FATURAADRESI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CARIREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CARIREFERANS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SOYAD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOYAD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SOYAD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOYAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TESLIMADRESI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TESLIMADRESI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TESLIMADRESI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TESLIMADRESI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FATURAADRESI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FATURAADRESI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FATURAADRESI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FATURAADRESI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CARIREFERANS", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CARIREFERANS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.EVKURConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CARIREFERANS, AD, SOYAD, TESLIMADRESI, FATURAADRESI FROM dbo.TBL_CARILER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EVKURDataSet.TBL_CARILERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EVKURDataSet.TBL_CARILERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EVKURDataSet.TBL_CARILERDataTable dataTable = new EVKURDataSet.TBL_CARILERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EVKURDataSet.TBL_CARILERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EVKURDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TBL_CARILER");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_CARIREFERANS, string Original_AD, string Original_SOYAD, string Original_TESLIMADRESI, string Original_FATURAADRESI) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_CARIREFERANS));
            if ((Original_AD == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_AD));
            }
            if ((Original_SOYAD == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_SOYAD));
            }
            if ((Original_TESLIMADRESI == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_TESLIMADRESI));
            }
            if ((Original_FATURAADRESI == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_FATURAADRESI));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string AD, string SOYAD, string TESLIMADRESI, string FATURAADRESI) {
            if ((AD == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(AD));
            }
            if ((SOYAD == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SOYAD));
            }
            if ((TESLIMADRESI == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(TESLIMADRESI));
            }
            if ((FATURAADRESI == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(FATURAADRESI));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string AD, string SOYAD, string TESLIMADRESI, string FATURAADRESI, int Original_CARIREFERANS, string Original_AD, string Original_SOYAD, string Original_TESLIMADRESI, string Original_FATURAADRESI, int CARIREFERANS) {
            if ((AD == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(AD));
            }
            if ((SOYAD == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SOYAD));
            }
            if ((TESLIMADRESI == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(TESLIMADRESI));
            }
            if ((FATURAADRESI == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(FATURAADRESI));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_CARIREFERANS));
            if ((Original_AD == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_AD));
            }
            if ((Original_SOYAD == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_SOYAD));
            }
            if ((Original_TESLIMADRESI == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_TESLIMADRESI));
            }
            if ((Original_FATURAADRESI == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_FATURAADRESI));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(CARIREFERANS));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string AD, string SOYAD, string TESLIMADRESI, string FATURAADRESI, int Original_CARIREFERANS, string Original_AD, string Original_SOYAD, string Original_TESLIMADRESI, string Original_FATURAADRESI) {
            return this.Update(AD, SOYAD, TESLIMADRESI, FATURAADRESI, Original_CARIREFERANS, Original_AD, Original_SOYAD, Original_TESLIMADRESI, Original_FATURAADRESI, Original_CARIREFERANS);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TBL_KULLANICILARTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TBL_KULLANICILARTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TBL_KULLANICILAR";
            tableMapping.ColumnMappings.Add("KULLANICIID", "KULLANICIID");
            tableMapping.ColumnMappings.Add("KULLANICIADI", "KULLANICIADI");
            tableMapping.ColumnMappings.Add("SIFRE", "SIFRE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TBL_KULLANICILAR] WHERE (([KULLANICIID] = @Original_KULLANICIID) AND ((@IsNull_KULLANICIADI = 1 AND [KULLANICIADI] IS NULL) OR ([KULLANICIADI] = @Original_KULLANICIADI)) AND ((@IsNull_SIFRE = 1 AND [SIFRE] IS NULL) OR ([SIFRE] = @Original_SIFRE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KULLANICIID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KULLANICIID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KULLANICIADI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KULLANICIADI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KULLANICIADI", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KULLANICIADI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SIFRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIFRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SIFRE", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIFRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TBL_KULLANICILAR] ([KULLANICIID], [KULLANICIADI], [SIFRE]) VAL" +
                "UES (@KULLANICIID, @KULLANICIADI, @SIFRE);\r\nSELECT KULLANICIID, KULLANICIADI, SI" +
                "FRE FROM TBL_KULLANICILAR WHERE (KULLANICIID = @KULLANICIID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KULLANICIID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KULLANICIID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KULLANICIADI", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KULLANICIADI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SIFRE", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIFRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TBL_KULLANICILAR] SET [KULLANICIID] = @KULLANICIID, [KULLANICIADI] = @KULLANICIADI, [SIFRE] = @SIFRE WHERE (([KULLANICIID] = @Original_KULLANICIID) AND ((@IsNull_KULLANICIADI = 1 AND [KULLANICIADI] IS NULL) OR ([KULLANICIADI] = @Original_KULLANICIADI)) AND ((@IsNull_SIFRE = 1 AND [SIFRE] IS NULL) OR ([SIFRE] = @Original_SIFRE)));
SELECT KULLANICIID, KULLANICIADI, SIFRE FROM TBL_KULLANICILAR WHERE (KULLANICIID = @KULLANICIID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KULLANICIID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KULLANICIID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KULLANICIADI", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KULLANICIADI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SIFRE", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIFRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KULLANICIID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KULLANICIID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KULLANICIADI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KULLANICIADI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KULLANICIADI", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KULLANICIADI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SIFRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIFRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SIFRE", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIFRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.EVKURConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT KULLANICIID, KULLANICIADI, SIFRE FROM dbo.TBL_KULLANICILAR";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EVKURDataSet.TBL_KULLANICILARDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EVKURDataSet.TBL_KULLANICILARDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EVKURDataSet.TBL_KULLANICILARDataTable dataTable = new EVKURDataSet.TBL_KULLANICILARDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EVKURDataSet.TBL_KULLANICILARDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EVKURDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TBL_KULLANICILAR");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_KULLANICIID, string Original_KULLANICIADI, string Original_SIFRE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_KULLANICIID));
            if ((Original_KULLANICIADI == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_KULLANICIADI));
            }
            if ((Original_SIFRE == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_SIFRE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int KULLANICIID, string KULLANICIADI, string SIFRE) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(KULLANICIID));
            if ((KULLANICIADI == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(KULLANICIADI));
            }
            if ((SIFRE == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SIFRE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int KULLANICIID, string KULLANICIADI, string SIFRE, int Original_KULLANICIID, string Original_KULLANICIADI, string Original_SIFRE) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(KULLANICIID));
            if ((KULLANICIADI == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(KULLANICIADI));
            }
            if ((SIFRE == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SIFRE));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_KULLANICIID));
            if ((Original_KULLANICIADI == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_KULLANICIADI));
            }
            if ((Original_SIFRE == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_SIFRE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string KULLANICIADI, string SIFRE, int Original_KULLANICIID, string Original_KULLANICIADI, string Original_SIFRE) {
            return this.Update(Original_KULLANICIID, KULLANICIADI, SIFRE, Original_KULLANICIID, Original_KULLANICIADI, Original_SIFRE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TBL_ODEMESEKILLERITableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TBL_ODEMESEKILLERITableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TBL_ODEMESEKILLERI";
            tableMapping.ColumnMappings.Add("ODEMEREFERANS", "ODEMEREFERANS");
            tableMapping.ColumnMappings.Add("ACIKLAMA", "ACIKLAMA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TBL_ODEMESEKILLERI] WHERE (([ODEMEREFERANS] = @Original_ODEMER" +
                "EFERANS) AND ((@IsNull_ACIKLAMA = 1 AND [ACIKLAMA] IS NULL) OR ([ACIKLAMA] = @Or" +
                "iginal_ACIKLAMA)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ODEMEREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ODEMEREFERANS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACIKLAMA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACIKLAMA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACIKLAMA", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACIKLAMA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TBL_ODEMESEKILLERI] ([ACIKLAMA]) VALUES (@ACIKLAMA);\r\nSELECT O" +
                "DEMEREFERANS, ACIKLAMA FROM TBL_ODEMESEKILLERI WHERE (ODEMEREFERANS = SCOPE_IDEN" +
                "TITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACIKLAMA", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACIKLAMA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TBL_ODEMESEKILLERI] SET [ACIKLAMA] = @ACIKLAMA WHERE (([ODEMEREFERANS] = @Original_ODEMEREFERANS) AND ((@IsNull_ACIKLAMA = 1 AND [ACIKLAMA] IS NULL) OR ([ACIKLAMA] = @Original_ACIKLAMA)));
SELECT ODEMEREFERANS, ACIKLAMA FROM TBL_ODEMESEKILLERI WHERE (ODEMEREFERANS = @ODEMEREFERANS)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACIKLAMA", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACIKLAMA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ODEMEREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ODEMEREFERANS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACIKLAMA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACIKLAMA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACIKLAMA", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACIKLAMA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ODEMEREFERANS", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ODEMEREFERANS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.EVKURConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ODEMEREFERANS, ACIKLAMA FROM dbo.TBL_ODEMESEKILLERI";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EVKURDataSet.TBL_ODEMESEKILLERIDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EVKURDataSet.TBL_ODEMESEKILLERIDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EVKURDataSet.TBL_ODEMESEKILLERIDataTable dataTable = new EVKURDataSet.TBL_ODEMESEKILLERIDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EVKURDataSet.TBL_ODEMESEKILLERIDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EVKURDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TBL_ODEMESEKILLERI");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ODEMEREFERANS, string Original_ACIKLAMA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ODEMEREFERANS));
            if ((Original_ACIKLAMA == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ACIKLAMA));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ACIKLAMA) {
            if ((ACIKLAMA == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ACIKLAMA));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ACIKLAMA, int Original_ODEMEREFERANS, string Original_ACIKLAMA, int ODEMEREFERANS) {
            if ((ACIKLAMA == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ACIKLAMA));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_ODEMEREFERANS));
            if ((Original_ACIKLAMA == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_ACIKLAMA));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(ODEMEREFERANS));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ACIKLAMA, int Original_ODEMEREFERANS, string Original_ACIKLAMA) {
            return this.Update(ACIKLAMA, Original_ODEMEREFERANS, Original_ACIKLAMA, Original_ODEMEREFERANS);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TBL_SIPARISBASLIKTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TBL_SIPARISBASLIKTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TBL_SIPARISBASLIK";
            tableMapping.ColumnMappings.Add("SIPARISBASLIKREFERANS", "SIPARISBASLIKREFERANS");
            tableMapping.ColumnMappings.Add("TARIH", "TARIH");
            tableMapping.ColumnMappings.Add("CARIREFERANS", "CARIREFERANS");
            tableMapping.ColumnMappings.Add("TOPLAMFIYAT", "TOPLAMFIYAT");
            tableMapping.ColumnMappings.Add("ODEMEREFERANS", "ODEMEREFERANS");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TBL_SIPARISBASLIK] WHERE (([SIPARISBASLIKREFERANS] = @Original_SIPARISBASLIKREFERANS) AND ((@IsNull_TARIH = 1 AND [TARIH] IS NULL) OR ([TARIH] = @Original_TARIH)) AND ((@IsNull_CARIREFERANS = 1 AND [CARIREFERANS] IS NULL) OR ([CARIREFERANS] = @Original_CARIREFERANS)) AND ((@IsNull_TOPLAMFIYAT = 1 AND [TOPLAMFIYAT] IS NULL) OR ([TOPLAMFIYAT] = @Original_TOPLAMFIYAT)) AND ([ODEMEREFERANS] = @Original_ODEMEREFERANS))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SIPARISBASLIKREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIPARISBASLIKREFERANS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TARIH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TARIH", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TARIH", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TARIH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CARIREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CARIREFERANS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CARIREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CARIREFERANS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TOPLAMFIYAT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TOPLAMFIYAT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOPLAMFIYAT", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TOPLAMFIYAT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ODEMEREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ODEMEREFERANS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TBL_SIPARISBASLIK] ([TARIH], [CARIREFERANS], [TOPLAMFIYAT], [ODEMEREFERANS]) VALUES (@TARIH, @CARIREFERANS, @TOPLAMFIYAT, @ODEMEREFERANS);
SELECT SIPARISBASLIKREFERANS, TARIH, CARIREFERANS, TOPLAMFIYAT, ODEMEREFERANS FROM TBL_SIPARISBASLIK WHERE (SIPARISBASLIKREFERANS = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TARIH", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TARIH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CARIREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CARIREFERANS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOPLAMFIYAT", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TOPLAMFIYAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ODEMEREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ODEMEREFERANS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TBL_SIPARISBASLIK] SET [TARIH] = @TARIH, [CARIREFERANS] = @CARIREFERANS, [TOPLAMFIYAT] = @TOPLAMFIYAT, [ODEMEREFERANS] = @ODEMEREFERANS WHERE (([SIPARISBASLIKREFERANS] = @Original_SIPARISBASLIKREFERANS) AND ((@IsNull_TARIH = 1 AND [TARIH] IS NULL) OR ([TARIH] = @Original_TARIH)) AND ((@IsNull_CARIREFERANS = 1 AND [CARIREFERANS] IS NULL) OR ([CARIREFERANS] = @Original_CARIREFERANS)) AND ((@IsNull_TOPLAMFIYAT = 1 AND [TOPLAMFIYAT] IS NULL) OR ([TOPLAMFIYAT] = @Original_TOPLAMFIYAT)) AND ([ODEMEREFERANS] = @Original_ODEMEREFERANS));
SELECT SIPARISBASLIKREFERANS, TARIH, CARIREFERANS, TOPLAMFIYAT, ODEMEREFERANS FROM TBL_SIPARISBASLIK WHERE (SIPARISBASLIKREFERANS = @SIPARISBASLIKREFERANS)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TARIH", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TARIH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CARIREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CARIREFERANS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOPLAMFIYAT", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TOPLAMFIYAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ODEMEREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ODEMEREFERANS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SIPARISBASLIKREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIPARISBASLIKREFERANS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TARIH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TARIH", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TARIH", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TARIH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CARIREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CARIREFERANS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CARIREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CARIREFERANS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TOPLAMFIYAT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TOPLAMFIYAT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOPLAMFIYAT", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TOPLAMFIYAT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ODEMEREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ODEMEREFERANS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SIPARISBASLIKREFERANS", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SIPARISBASLIKREFERANS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.EVKURConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SIPARISBASLIKREFERANS, TARIH, CARIREFERANS, TOPLAMFIYAT, ODEMEREFERANS FRO" +
                "M dbo.TBL_SIPARISBASLIK";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EVKURDataSet.TBL_SIPARISBASLIKDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EVKURDataSet.TBL_SIPARISBASLIKDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EVKURDataSet.TBL_SIPARISBASLIKDataTable dataTable = new EVKURDataSet.TBL_SIPARISBASLIKDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EVKURDataSet.TBL_SIPARISBASLIKDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EVKURDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TBL_SIPARISBASLIK");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_SIPARISBASLIKREFERANS, global::System.Nullable<global::System.DateTime> Original_TARIH, global::System.Nullable<int> Original_CARIREFERANS, global::System.Nullable<decimal> Original_TOPLAMFIYAT, int Original_ODEMEREFERANS) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_SIPARISBASLIKREFERANS));
            if ((Original_TARIH.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_TARIH.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_CARIREFERANS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_CARIREFERANS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_TOPLAMFIYAT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_TOPLAMFIYAT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_ODEMEREFERANS));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<global::System.DateTime> TARIH, global::System.Nullable<int> CARIREFERANS, global::System.Nullable<decimal> TOPLAMFIYAT, int ODEMEREFERANS) {
            if ((TARIH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(TARIH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CARIREFERANS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(CARIREFERANS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((TOPLAMFIYAT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(TOPLAMFIYAT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(ODEMEREFERANS));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<global::System.DateTime> TARIH, global::System.Nullable<int> CARIREFERANS, global::System.Nullable<decimal> TOPLAMFIYAT, int ODEMEREFERANS, int Original_SIPARISBASLIKREFERANS, global::System.Nullable<global::System.DateTime> Original_TARIH, global::System.Nullable<int> Original_CARIREFERANS, global::System.Nullable<decimal> Original_TOPLAMFIYAT, int Original_ODEMEREFERANS, int SIPARISBASLIKREFERANS) {
            if ((TARIH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(TARIH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CARIREFERANS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(CARIREFERANS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((TOPLAMFIYAT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(TOPLAMFIYAT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ODEMEREFERANS));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_SIPARISBASLIKREFERANS));
            if ((Original_TARIH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Original_TARIH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_CARIREFERANS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_CARIREFERANS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_TOPLAMFIYAT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_TOPLAMFIYAT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_ODEMEREFERANS));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(SIPARISBASLIKREFERANS));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<global::System.DateTime> TARIH, global::System.Nullable<int> CARIREFERANS, global::System.Nullable<decimal> TOPLAMFIYAT, int ODEMEREFERANS, int Original_SIPARISBASLIKREFERANS, global::System.Nullable<global::System.DateTime> Original_TARIH, global::System.Nullable<int> Original_CARIREFERANS, global::System.Nullable<decimal> Original_TOPLAMFIYAT, int Original_ODEMEREFERANS) {
            return this.Update(TARIH, CARIREFERANS, TOPLAMFIYAT, ODEMEREFERANS, Original_SIPARISBASLIKREFERANS, Original_TARIH, Original_CARIREFERANS, Original_TOPLAMFIYAT, Original_ODEMEREFERANS, Original_SIPARISBASLIKREFERANS);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TBL_SIPARISSATIRLARITableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TBL_SIPARISSATIRLARITableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TBL_SIPARISSATIRLARI";
            tableMapping.ColumnMappings.Add("SIPARISSATIRREFERANS", "SIPARISSATIRREFERANS");
            tableMapping.ColumnMappings.Add("SIPARISBASLIKREFERANS", "SIPARISBASLIKREFERANS");
            tableMapping.ColumnMappings.Add("STOKREFERANS", "STOKREFERANS");
            tableMapping.ColumnMappings.Add("ADET", "ADET");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TBL_SIPARISSATIRLARI] WHERE (([SIPARISSATIRREFERANS] = @Original_SIPARISSATIRREFERANS) AND ((@IsNull_SIPARISBASLIKREFERANS = 1 AND [SIPARISBASLIKREFERANS] IS NULL) OR ([SIPARISBASLIKREFERANS] = @Original_SIPARISBASLIKREFERANS)) AND ((@IsNull_STOKREFERANS = 1 AND [STOKREFERANS] IS NULL) OR ([STOKREFERANS] = @Original_STOKREFERANS)) AND ((@IsNull_ADET = 1 AND [ADET] IS NULL) OR ([ADET] = @Original_ADET)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SIPARISSATIRREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIPARISSATIRREFERANS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SIPARISBASLIKREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIPARISBASLIKREFERANS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SIPARISBASLIKREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIPARISBASLIKREFERANS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STOKREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOKREFERANS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOKREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOKREFERANS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ADET", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADET", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADET", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADET", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TBL_SIPARISSATIRLARI] ([SIPARISBASLIKREFERANS], [STOKREFERANS], [ADET]) VALUES (@SIPARISBASLIKREFERANS, @STOKREFERANS, @ADET);
SELECT SIPARISSATIRREFERANS, SIPARISBASLIKREFERANS, STOKREFERANS, ADET FROM TBL_SIPARISSATIRLARI WHERE (SIPARISSATIRREFERANS = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SIPARISBASLIKREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIPARISBASLIKREFERANS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOKREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOKREFERANS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADET", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADET", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TBL_SIPARISSATIRLARI] SET [SIPARISBASLIKREFERANS] = @SIPARISBASLIKREFERANS, [STOKREFERANS] = @STOKREFERANS, [ADET] = @ADET WHERE (([SIPARISSATIRREFERANS] = @Original_SIPARISSATIRREFERANS) AND ((@IsNull_SIPARISBASLIKREFERANS = 1 AND [SIPARISBASLIKREFERANS] IS NULL) OR ([SIPARISBASLIKREFERANS] = @Original_SIPARISBASLIKREFERANS)) AND ((@IsNull_STOKREFERANS = 1 AND [STOKREFERANS] IS NULL) OR ([STOKREFERANS] = @Original_STOKREFERANS)) AND ((@IsNull_ADET = 1 AND [ADET] IS NULL) OR ([ADET] = @Original_ADET)));
SELECT SIPARISSATIRREFERANS, SIPARISBASLIKREFERANS, STOKREFERANS, ADET FROM TBL_SIPARISSATIRLARI WHERE (SIPARISSATIRREFERANS = @SIPARISSATIRREFERANS)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SIPARISBASLIKREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIPARISBASLIKREFERANS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOKREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOKREFERANS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADET", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADET", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SIPARISSATIRREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIPARISSATIRREFERANS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SIPARISBASLIKREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIPARISBASLIKREFERANS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SIPARISBASLIKREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIPARISBASLIKREFERANS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STOKREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOKREFERANS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOKREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOKREFERANS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ADET", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADET", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADET", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADET", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SIPARISSATIRREFERANS", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SIPARISSATIRREFERANS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.EVKURConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SIPARISSATIRREFERANS, SIPARISBASLIKREFERANS, STOKREFERANS, ADET FROM dbo.T" +
                "BL_SIPARISSATIRLARI";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EVKURDataSet.TBL_SIPARISSATIRLARIDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EVKURDataSet.TBL_SIPARISSATIRLARIDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EVKURDataSet.TBL_SIPARISSATIRLARIDataTable dataTable = new EVKURDataSet.TBL_SIPARISSATIRLARIDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EVKURDataSet.TBL_SIPARISSATIRLARIDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EVKURDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TBL_SIPARISSATIRLARI");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_SIPARISSATIRREFERANS, global::System.Nullable<int> Original_SIPARISBASLIKREFERANS, global::System.Nullable<int> Original_STOKREFERANS, global::System.Nullable<short> Original_ADET) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_SIPARISSATIRREFERANS));
            if ((Original_SIPARISBASLIKREFERANS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_SIPARISBASLIKREFERANS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_STOKREFERANS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_STOKREFERANS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_ADET.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((short)(Original_ADET.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> SIPARISBASLIKREFERANS, global::System.Nullable<int> STOKREFERANS, global::System.Nullable<short> ADET) {
            if ((SIPARISBASLIKREFERANS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(SIPARISBASLIKREFERANS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((STOKREFERANS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(STOKREFERANS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ADET.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((short)(ADET.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> SIPARISBASLIKREFERANS, global::System.Nullable<int> STOKREFERANS, global::System.Nullable<short> ADET, int Original_SIPARISSATIRREFERANS, global::System.Nullable<int> Original_SIPARISBASLIKREFERANS, global::System.Nullable<int> Original_STOKREFERANS, global::System.Nullable<short> Original_ADET, int SIPARISSATIRREFERANS) {
            if ((SIPARISBASLIKREFERANS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(SIPARISBASLIKREFERANS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((STOKREFERANS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(STOKREFERANS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ADET.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((short)(ADET.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_SIPARISSATIRREFERANS));
            if ((Original_SIPARISBASLIKREFERANS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_SIPARISBASLIKREFERANS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_STOKREFERANS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_STOKREFERANS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_ADET.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((short)(Original_ADET.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(SIPARISSATIRREFERANS));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> SIPARISBASLIKREFERANS, global::System.Nullable<int> STOKREFERANS, global::System.Nullable<short> ADET, int Original_SIPARISSATIRREFERANS, global::System.Nullable<int> Original_SIPARISBASLIKREFERANS, global::System.Nullable<int> Original_STOKREFERANS, global::System.Nullable<short> Original_ADET) {
            return this.Update(SIPARISBASLIKREFERANS, STOKREFERANS, ADET, Original_SIPARISSATIRREFERANS, Original_SIPARISBASLIKREFERANS, Original_STOKREFERANS, Original_ADET, Original_SIPARISSATIRREFERANS);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TBL_STOKKARTLARITableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TBL_STOKKARTLARITableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TBL_STOKKARTLARI";
            tableMapping.ColumnMappings.Add("STOKREFERANS", "STOKREFERANS");
            tableMapping.ColumnMappings.Add("ACIKLAMA", "ACIKLAMA");
            tableMapping.ColumnMappings.Add("BIRIMFIYAT", "BIRIMFIYAT");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TBL_STOKKARTLARI] WHERE (([STOKREFERANS] = @Original_STOKREFERANS) AND ((@IsNull_ACIKLAMA = 1 AND [ACIKLAMA] IS NULL) OR ([ACIKLAMA] = @Original_ACIKLAMA)) AND ((@IsNull_BIRIMFIYAT = 1 AND [BIRIMFIYAT] IS NULL) OR ([BIRIMFIYAT] = @Original_BIRIMFIYAT)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOKREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOKREFERANS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACIKLAMA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACIKLAMA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACIKLAMA", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACIKLAMA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BIRIMFIYAT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BIRIMFIYAT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BIRIMFIYAT", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BIRIMFIYAT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TBL_STOKKARTLARI] ([ACIKLAMA], [BIRIMFIYAT]) VALUES (@ACIKLAMA" +
                ", @BIRIMFIYAT);\r\nSELECT STOKREFERANS, ACIKLAMA, BIRIMFIYAT FROM TBL_STOKKARTLARI" +
                " WHERE (STOKREFERANS = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACIKLAMA", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACIKLAMA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BIRIMFIYAT", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BIRIMFIYAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TBL_STOKKARTLARI] SET [ACIKLAMA] = @ACIKLAMA, [BIRIMFIYAT] = @BIRIMFIYAT WHERE (([STOKREFERANS] = @Original_STOKREFERANS) AND ((@IsNull_ACIKLAMA = 1 AND [ACIKLAMA] IS NULL) OR ([ACIKLAMA] = @Original_ACIKLAMA)) AND ((@IsNull_BIRIMFIYAT = 1 AND [BIRIMFIYAT] IS NULL) OR ([BIRIMFIYAT] = @Original_BIRIMFIYAT)));
SELECT STOKREFERANS, ACIKLAMA, BIRIMFIYAT FROM TBL_STOKKARTLARI WHERE (STOKREFERANS = @STOKREFERANS)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACIKLAMA", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACIKLAMA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BIRIMFIYAT", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BIRIMFIYAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOKREFERANS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOKREFERANS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACIKLAMA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACIKLAMA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACIKLAMA", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACIKLAMA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BIRIMFIYAT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BIRIMFIYAT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BIRIMFIYAT", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BIRIMFIYAT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOKREFERANS", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "STOKREFERANS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.EVKURConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT STOKREFERANS, ACIKLAMA, BIRIMFIYAT FROM dbo.TBL_STOKKARTLARI";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EVKURDataSet.TBL_STOKKARTLARIDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EVKURDataSet.TBL_STOKKARTLARIDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EVKURDataSet.TBL_STOKKARTLARIDataTable dataTable = new EVKURDataSet.TBL_STOKKARTLARIDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EVKURDataSet.TBL_STOKKARTLARIDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EVKURDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TBL_STOKKARTLARI");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_STOKREFERANS, string Original_ACIKLAMA, global::System.Nullable<decimal> Original_BIRIMFIYAT) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_STOKREFERANS));
            if ((Original_ACIKLAMA == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ACIKLAMA));
            }
            if ((Original_BIRIMFIYAT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_BIRIMFIYAT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ACIKLAMA, global::System.Nullable<decimal> BIRIMFIYAT) {
            if ((ACIKLAMA == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ACIKLAMA));
            }
            if ((BIRIMFIYAT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(BIRIMFIYAT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ACIKLAMA, global::System.Nullable<decimal> BIRIMFIYAT, int Original_STOKREFERANS, string Original_ACIKLAMA, global::System.Nullable<decimal> Original_BIRIMFIYAT, int STOKREFERANS) {
            if ((ACIKLAMA == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ACIKLAMA));
            }
            if ((BIRIMFIYAT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(BIRIMFIYAT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_STOKREFERANS));
            if ((Original_ACIKLAMA == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_ACIKLAMA));
            }
            if ((Original_BIRIMFIYAT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_BIRIMFIYAT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(STOKREFERANS));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ACIKLAMA, global::System.Nullable<decimal> BIRIMFIYAT, int Original_STOKREFERANS, string Original_ACIKLAMA, global::System.Nullable<decimal> Original_BIRIMFIYAT) {
            return this.Update(ACIKLAMA, BIRIMFIYAT, Original_STOKREFERANS, Original_ACIKLAMA, Original_BIRIMFIYAT, Original_STOKREFERANS);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_1TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_1TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_1";
            tableMapping.ColumnMappings.Add("AD", "AD");
            tableMapping.ColumnMappings.Add("SOYAD", "SOYAD");
            tableMapping.ColumnMappings.Add("ACIKLAMA", "ACIKLAMA");
            tableMapping.ColumnMappings.Add("TARIH", "TARIH");
            tableMapping.ColumnMappings.Add("SIPARISBASLIKREFERANS", "SIPARISBASLIKREFERANS");
            tableMapping.ColumnMappings.Add("TOPLAMFIYAT", "TOPLAMFIYAT");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.EVKURConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT AD, SOYAD, ACIKLAMA, TARIH, SIPARISBASLIKREFERANS, TOPLAMFIYAT FROM dbo.Vi" +
                "ew_1";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EVKURDataSet.View_1DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EVKURDataSet.View_1DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EVKURDataSet.View_1DataTable dataTable = new EVKURDataSet.View_1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private TBL_CARILERTableAdapter _tBL_CARILERTableAdapter;
        
        private TBL_KULLANICILARTableAdapter _tBL_KULLANICILARTableAdapter;
        
        private TBL_ODEMESEKILLERITableAdapter _tBL_ODEMESEKILLERITableAdapter;
        
        private TBL_SIPARISBASLIKTableAdapter _tBL_SIPARISBASLIKTableAdapter;
        
        private TBL_SIPARISSATIRLARITableAdapter _tBL_SIPARISSATIRLARITableAdapter;
        
        private TBL_STOKKARTLARITableAdapter _tBL_STOKKARTLARITableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public TBL_CARILERTableAdapter TBL_CARILERTableAdapter {
            get {
                return this._tBL_CARILERTableAdapter;
            }
            set {
                if (((this._tBL_CARILERTableAdapter != null) 
                            && (this.TableAdapterInstanceCount == 1))) {
                    this._tBL_CARILERTableAdapter = value;
                    return;
                }
                if (((value != null) 
                            && (this.MatchTableAdapterConnection(value.Connection) == false))) {
                    throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                            "tring.");
                }
                this._tBL_CARILERTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public TBL_KULLANICILARTableAdapter TBL_KULLANICILARTableAdapter {
            get {
                return this._tBL_KULLANICILARTableAdapter;
            }
            set {
                if (((this._tBL_KULLANICILARTableAdapter != null) 
                            && (this.TableAdapterInstanceCount == 1))) {
                    this._tBL_KULLANICILARTableAdapter = value;
                    return;
                }
                if (((value != null) 
                            && (this.MatchTableAdapterConnection(value.Connection) == false))) {
                    throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                            "tring.");
                }
                this._tBL_KULLANICILARTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public TBL_ODEMESEKILLERITableAdapter TBL_ODEMESEKILLERITableAdapter {
            get {
                return this._tBL_ODEMESEKILLERITableAdapter;
            }
            set {
                if (((this._tBL_ODEMESEKILLERITableAdapter != null) 
                            && (this.TableAdapterInstanceCount == 1))) {
                    this._tBL_ODEMESEKILLERITableAdapter = value;
                    return;
                }
                if (((value != null) 
                            && (this.MatchTableAdapterConnection(value.Connection) == false))) {
                    throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                            "tring.");
                }
                this._tBL_ODEMESEKILLERITableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public TBL_SIPARISBASLIKTableAdapter TBL_SIPARISBASLIKTableAdapter {
            get {
                return this._tBL_SIPARISBASLIKTableAdapter;
            }
            set {
                if (((this._tBL_SIPARISBASLIKTableAdapter != null) 
                            && (this.TableAdapterInstanceCount == 1))) {
                    this._tBL_SIPARISBASLIKTableAdapter = value;
                    return;
                }
                if (((value != null) 
                            && (this.MatchTableAdapterConnection(value.Connection) == false))) {
                    throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                            "tring.");
                }
                this._tBL_SIPARISBASLIKTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public TBL_SIPARISSATIRLARITableAdapter TBL_SIPARISSATIRLARITableAdapter {
            get {
                return this._tBL_SIPARISSATIRLARITableAdapter;
            }
            set {
                if (((this._tBL_SIPARISSATIRLARITableAdapter != null) 
                            && (this.TableAdapterInstanceCount == 1))) {
                    this._tBL_SIPARISSATIRLARITableAdapter = value;
                    return;
                }
                if (((value != null) 
                            && (this.MatchTableAdapterConnection(value.Connection) == false))) {
                    throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                            "tring.");
                }
                this._tBL_SIPARISSATIRLARITableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public TBL_STOKKARTLARITableAdapter TBL_STOKKARTLARITableAdapter {
            get {
                return this._tBL_STOKKARTLARITableAdapter;
            }
            set {
                if (((this._tBL_STOKKARTLARITableAdapter != null) 
                            && (this.TableAdapterInstanceCount == 1))) {
                    this._tBL_STOKKARTLARITableAdapter = value;
                    return;
                }
                if (((value != null) 
                            && (this.MatchTableAdapterConnection(value.Connection) == false))) {
                    throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                            "tring.");
                }
                this._tBL_STOKKARTLARITableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tBL_CARILERTableAdapter != null) 
                            && (this._tBL_CARILERTableAdapter.Connection != null))) {
                    return this._tBL_CARILERTableAdapter.Connection;
                }
                if (((this._tBL_KULLANICILARTableAdapter != null) 
                            && (this._tBL_KULLANICILARTableAdapter.Connection != null))) {
                    return this._tBL_KULLANICILARTableAdapter.Connection;
                }
                if (((this._tBL_ODEMESEKILLERITableAdapter != null) 
                            && (this._tBL_ODEMESEKILLERITableAdapter.Connection != null))) {
                    return this._tBL_ODEMESEKILLERITableAdapter.Connection;
                }
                if (((this._tBL_SIPARISBASLIKTableAdapter != null) 
                            && (this._tBL_SIPARISBASLIKTableAdapter.Connection != null))) {
                    return this._tBL_SIPARISBASLIKTableAdapter.Connection;
                }
                if (((this._tBL_SIPARISSATIRLARITableAdapter != null) 
                            && (this._tBL_SIPARISSATIRLARITableAdapter.Connection != null))) {
                    return this._tBL_SIPARISSATIRLARITableAdapter.Connection;
                }
                if (((this._tBL_STOKKARTLARITableAdapter != null) 
                            && (this._tBL_STOKKARTLARITableAdapter.Connection != null))) {
                    return this._tBL_STOKKARTLARITableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tBL_CARILERTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tBL_KULLANICILARTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tBL_ODEMESEKILLERITableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tBL_SIPARISBASLIKTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tBL_SIPARISSATIRLARITableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tBL_STOKKARTLARITableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(EVKURDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tBL_ODEMESEKILLERITableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TBL_ODEMESEKILLERI.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tBL_ODEMESEKILLERITableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tBL_CARILERTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TBL_CARILER.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tBL_CARILERTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tBL_STOKKARTLARITableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TBL_STOKKARTLARI.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tBL_STOKKARTLARITableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tBL_SIPARISBASLIKTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TBL_SIPARISBASLIK.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tBL_SIPARISBASLIKTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tBL_KULLANICILARTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TBL_KULLANICILAR.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tBL_KULLANICILARTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tBL_SIPARISSATIRLARITableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TBL_SIPARISSATIRLARI.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tBL_SIPARISSATIRLARITableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(EVKURDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tBL_ODEMESEKILLERITableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TBL_ODEMESEKILLERI.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tBL_ODEMESEKILLERITableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tBL_CARILERTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TBL_CARILER.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tBL_CARILERTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tBL_STOKKARTLARITableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TBL_STOKKARTLARI.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tBL_STOKKARTLARITableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tBL_SIPARISBASLIKTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TBL_SIPARISBASLIK.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tBL_SIPARISBASLIKTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tBL_KULLANICILARTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TBL_KULLANICILAR.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tBL_KULLANICILARTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tBL_SIPARISSATIRLARITableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TBL_SIPARISSATIRLARI.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tBL_SIPARISSATIRLARITableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(EVKURDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tBL_SIPARISSATIRLARITableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TBL_SIPARISSATIRLARI.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tBL_SIPARISSATIRLARITableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tBL_KULLANICILARTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TBL_KULLANICILAR.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tBL_KULLANICILARTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tBL_SIPARISBASLIKTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TBL_SIPARISBASLIK.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tBL_SIPARISBASLIKTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tBL_STOKKARTLARITableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TBL_STOKKARTLARI.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tBL_STOKKARTLARITableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tBL_CARILERTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TBL_CARILER.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tBL_CARILERTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tBL_ODEMESEKILLERITableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TBL_ODEMESEKILLERI.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tBL_ODEMESEKILLERITableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(EVKURDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Closed) 
                        == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tBL_CARILERTableAdapter != null)) {
                    revertConnections.Add(this._tBL_CARILERTableAdapter, this._tBL_CARILERTableAdapter.Connection);
                    this._tBL_CARILERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tBL_CARILERTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tBL_CARILERTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tBL_CARILERTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tBL_CARILERTableAdapter.Adapter);
                    }
                }
                if ((this._tBL_KULLANICILARTableAdapter != null)) {
                    revertConnections.Add(this._tBL_KULLANICILARTableAdapter, this._tBL_KULLANICILARTableAdapter.Connection);
                    this._tBL_KULLANICILARTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tBL_KULLANICILARTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tBL_KULLANICILARTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tBL_KULLANICILARTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tBL_KULLANICILARTableAdapter.Adapter);
                    }
                }
                if ((this._tBL_ODEMESEKILLERITableAdapter != null)) {
                    revertConnections.Add(this._tBL_ODEMESEKILLERITableAdapter, this._tBL_ODEMESEKILLERITableAdapter.Connection);
                    this._tBL_ODEMESEKILLERITableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tBL_ODEMESEKILLERITableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tBL_ODEMESEKILLERITableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tBL_ODEMESEKILLERITableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tBL_ODEMESEKILLERITableAdapter.Adapter);
                    }
                }
                if ((this._tBL_SIPARISBASLIKTableAdapter != null)) {
                    revertConnections.Add(this._tBL_SIPARISBASLIKTableAdapter, this._tBL_SIPARISBASLIKTableAdapter.Connection);
                    this._tBL_SIPARISBASLIKTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tBL_SIPARISBASLIKTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tBL_SIPARISBASLIKTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tBL_SIPARISBASLIKTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tBL_SIPARISBASLIKTableAdapter.Adapter);
                    }
                }
                if ((this._tBL_SIPARISSATIRLARITableAdapter != null)) {
                    revertConnections.Add(this._tBL_SIPARISSATIRLARITableAdapter, this._tBL_SIPARISSATIRLARITableAdapter.Connection);
                    this._tBL_SIPARISSATIRLARITableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tBL_SIPARISSATIRLARITableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tBL_SIPARISSATIRLARITableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tBL_SIPARISSATIRLARITableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tBL_SIPARISSATIRLARITableAdapter.Adapter);
                    }
                }
                if ((this._tBL_STOKKARTLARITableAdapter != null)) {
                    revertConnections.Add(this._tBL_STOKKARTLARITableAdapter, this._tBL_STOKKARTLARITableAdapter.Connection);
                    this._tBL_STOKKARTLARITableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tBL_STOKKARTLARITableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tBL_STOKKARTLARITableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tBL_STOKKARTLARITableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tBL_STOKKARTLARITableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tBL_CARILERTableAdapter != null)) {
                    this._tBL_CARILERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tBL_CARILERTableAdapter]));
                    this._tBL_CARILERTableAdapter.Transaction = null;
                }
                if ((this._tBL_KULLANICILARTableAdapter != null)) {
                    this._tBL_KULLANICILARTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tBL_KULLANICILARTableAdapter]));
                    this._tBL_KULLANICILARTableAdapter.Transaction = null;
                }
                if ((this._tBL_ODEMESEKILLERITableAdapter != null)) {
                    this._tBL_ODEMESEKILLERITableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tBL_ODEMESEKILLERITableAdapter]));
                    this._tBL_ODEMESEKILLERITableAdapter.Transaction = null;
                }
                if ((this._tBL_SIPARISBASLIKTableAdapter != null)) {
                    this._tBL_SIPARISBASLIKTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tBL_SIPARISBASLIKTableAdapter]));
                    this._tBL_SIPARISBASLIKTableAdapter.Transaction = null;
                }
                if ((this._tBL_SIPARISSATIRLARITableAdapter != null)) {
                    this._tBL_SIPARISSATIRLARITableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tBL_SIPARISSATIRLARITableAdapter]));
                    this._tBL_SIPARISSATIRLARITableAdapter.Transaction = null;
                }
                if ((this._tBL_STOKKARTLARITableAdapter != null)) {
                    this._tBL_STOKKARTLARITableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tBL_STOKKARTLARITableAdapter]));
                    this._tBL_STOKKARTLARITableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591